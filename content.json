{"meta":{"title":"Huanhao's Blog","subtitle":"","description":"","author":"huanhao","url":"https://laijiahao.cn","root":"/"},"pages":[{"title":"about","date":"2021-07-03T10:47:32.000Z","updated":"2021-07-03T11:04:59.773Z","comments":true,"path":"about/index.html","permalink":"https://laijiahao.cn/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2021-07-03T10:47:02.000Z","updated":"2021-07-03T10:47:02.360Z","comments":true,"path":"categories/index.html","permalink":"https://laijiahao.cn/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-07-03T10:47:20.000Z","updated":"2021-07-03T10:47:56.490Z","comments":true,"path":"tags/index.html","permalink":"https://laijiahao.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"提问的智慧(提问前必看)","slug":"How-To-Ask","date":"2020-04-23T11:38:58.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/04/23/How-To-Ask/","link":"","permalink":"https://laijiahao.cn/2020/04/23/How-To-Ask/","excerpt":"在大家在提问的时候，可能会出现如下问题 自己问的问题其实是特别简单的东西，别人让你百度或者谷歌（你却不肯，最后没有找到答案） 没有任何准备，遇到问题就求助 求助信息不够完整，一句话就草草描述 希望大家看看这篇文章，教你如何去提问(一定会给你帮助的) 本篇文章为转载！","text":"在大家在提问的时候，可能会出现如下问题 自己问的问题其实是特别简单的东西，别人让你百度或者谷歌（你却不肯，最后没有找到答案） 没有任何准备，遇到问题就求助 求助信息不够完整，一句话就草草描述 希望大家看看这篇文章，教你如何去提问(一定会给你帮助的) 本篇文章为转载！ 原文地址 提问的智慧 How To Ask Questions The Smart Way Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen 本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。 原文网址：http://www.catb.org/~esr/faqs/smart-questions.html Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu 本中文指南是基于原文 3.10 版以及 2010 年由 Gasolin 所翻译版本的最新翻译； 协助指出翻译问题，请发 Issue，或直接发 Pull Request 给我。 本文另有繁體中文版。 声明许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明： 本指南不提供此项目的实际支持服务！ 我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。 如果你是因为需要某些协助而正在阅读这本指南，并且最后离开是因为发现从本指南作者们身上得不到直接的协助，那么你就是我们所说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中是教你如何从那些真正懂得你所遇到软件或硬件问题的人取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。 简介在黑客的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。 不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件好事；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。 首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，”好问题！”是诚挚的大力称赞。 尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。 我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 失败者（撸瑟） （由于历史原因，我们有时把它拼作 lusers）。 我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。 我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答赢家（winner）的问题。 如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。 所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 – 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。 如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 – 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。 （欢迎对本指南提出改进意见。你可以 email 你的建议至 esr@thyrsus.com 或 respond-auto@linuxmafia.com。然而请注意，本文并非网络礼节的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。 在提问之前在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情： 尝试在你准备提问的论坛的旧文章中搜索答案。 尝试上网搜索以找到答案。 尝试阅读手册以找到答案。 尝试阅读常见问题文件（FAQ）以找到答案。 尝试自己检查或试验以找到答案。 向你身边的强者朋友打听以找到答案。 如果你是程序开发者，请尝试阅读源代码以找到答案。 当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所学到的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。 运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（既搜索 Google 论坛，也搜索网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 我在 Google 中搜过下列句子但没有找到什么有用的东西 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。 别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。 准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。 小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着蠢问题…， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。 绝不要自以为够格得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去挣到一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。 另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。谁能给点提示？、我的这个例子里缺了什么？以及我应该检查什么地方比请把我需要的确切的过程贴出来更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。 当你提问时慎选提问的论坛小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者： 在与主题不合的论坛上贴出你的问题。 在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。 在太多的不同新闻群组上重复转贴同样的问题（cross-post）。 向既非熟人也没有义务解决你问题的人发送私人电邮。 黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。 因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括阅读 FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。 向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 – 如果你不确定，那就向别处发送，或者压根别发。 在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。 别像机关枪似的一次”扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。 搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。 一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。 可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。 Stack Overflow搜索，然后 在 Stack Exchange 问。 近年来，Stack Exchange community 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。 因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。 Stack Exchange 已经成长到超过一百个网站，以下是最常用的几个站： Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。 Stack Overflow 是问写程序有关的问题。 Server Fault 是问服务器和网管相关的问题。 网站和 IRC 论坛本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。 事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 “用我们的版本”。 在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。 通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。 在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。 第二步，使用项目邮件列表当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法： 任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。 向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。 大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。 如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。 如果一个项目既有”使用者” 也有”开发者”（或”黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向”使用者”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。 然而，如果你确信你的问题很特别，而且在”使用者” 列表或论坛中几天都没有回复，可以试试前往”开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意） 如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。 使用有意义且描述明确的标题在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的帮帮忙、跪求、急（更别说救命啊！！！！这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。 一个好标题范例是目标 —— 差异式的描述，许多技术支持组织就是这样做的。在目标部分指出是哪一个或哪一组东西有问题，在差异部分则描述与期望的行为不一致的地方。 蠢问题：救命啊！我的笔记本电脑不能正常显示了！ 聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。 更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。 编写目标 —— 差异 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境和你遇到的问题。 总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。 如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 Re: 测试 或者 Re: 新 bug 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。 对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。 仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。 在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你只想在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。 使问题容易回复以请将你的回复发送到……来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，换个好点的；如果是操作系统不支持这种邮件程序，也换个好点的。 在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如追踪此讨论串、有回复时发送邮件提醒等功能。 用清晰、正确、精准并语法正确的语句我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。 正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它必须很准确，而且有迹象表明你是在思考和关注问题。 正确地拼写、使用标点和大小写，不要将its混淆为it&#39;s，loose搞成lose或者将discrete弄成discreet。不要全部用大写，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。Alan Cox 也许可以这样做，但你不行）。 更白话的说，如果你写得像是个半文盲[译注：小白]，那多半得不到理睬。也不要使用即时通信中的简写或火星文，如将的简化为d会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。 如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。 如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：[译注：以下附上原文以供使用] English is not my native language; please excuse typing errors. 英文不是我的母语，请原谅我的错字或语法。 If you speak $LANGUAGE, please email/PM me;I may need assistance translating my question. 如果你说某语言，请寄信/私讯给我；我需要有人协助我翻译我的问题。 I am familiar with the technical terms,but some slang expressions and idioms are difficult for me. 我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。 I’ve posted my question in $LANGUAGE and English.I’ll be glad to translate responses, if you only use one or the other. 我把我的问题用某语言和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。 使用易于读取且标准的文件格式发送问题如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以： 使用纯文字而不是 HTML (关闭 HTML 并不难）。 使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。 不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。 但是，对一些特殊的文件不要设置固定宽度（譬如日志档案拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。 在英语论坛中，不要使用Quoted-Printable MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的=20符号既难看也分散注意力，甚至有可能破坏内容的语意。 绝对，永远不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。 如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的智能引号功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉智能引号单选框），以免在你的邮件中到处散布垃圾字符。 在论坛，勿滥用表情符号和HTML功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。 如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的查看源代码命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。 精确地描述问题并言之有物 仔细、清楚地描述你的问题或 Bug 的症状。 描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：Fedora Core 4、Slackware 9.1等）。 描述在提问前你是怎样去研究和理解这个问题的。 描述在提问前为确定问题而采取的诊断步骤。 描述最近做过什么可能相关的硬件或软件变更。 尽可能的提供一个可以重现这个问题的可控环境的方法。 尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。 以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。 Simon Tatham 写过一篇名为《如何有效的报告 Bug》的出色文章。强力推荐你也读一读。 话不在多而在精你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。 这样做的用处至少有三点。第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；第二，简化问题使你更有可能得到有用的答案；第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。 别动辄声称找到 Bug当你在使用软件中遇到问题，除非你非常、非常的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的Bug，你应该能提供相应位置的修正或替代文件。 请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前已经做了这些，是吧？）。这也意味着很有可能是你弄错了而不是软件本身有问题。 编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有Bug时，这尤其严重。 提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是你做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。 低声下气不能代替你的功课有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：我知道我只是个可悲的新手，一个撸瑟，但...。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。 别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。 有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。 描述问题症状而非你的猜测告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。 蠢问题 我在编译内核时接连遇到 SIG11 错误，我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？ 聪明问题 我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组），256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。所有内存都换过了，没有效果。相关部分的标准编译记录如下…。 由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：所有的诊断专家都来自密苏里州。 美国国务院的官方座右铭则是：让我看看（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！ 按发生时间先后列出问题症状问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。 如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，多不等于好。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。 如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。 描述目标而不是过程如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。 经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。 蠢问题 我怎样才能从某绘图程序的颜色选择器中取得十六进制的的 RGB 值？ 聪明问题 我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），但却无法从某绘图程序的颜色选择器取得十六进制的的 RGB 值。 第二种提问法比较聪明，你可能得到像是建议采用另一个更合适的工具的回复。 别要求使用私人电邮回复黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。 当你要求私下回复时，这个过程和奖励都被中止。别这样做，让回复者来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。 这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是向我发电邮，我将为论坛归纳这些回复。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。 清楚明确的表达你的问题以及需求漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。 如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。 要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。 所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问我想更好的理解 X，可否指点一下哪有好一点说明？通常比问你能解释一下 X 吗？更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。 询问有关代码的问题时别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：它不能工作会让你完全被忽略。只贴几十行代码，然后说一句：在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;比较有可能让你得到回应。 最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能刚好展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看话不在多而在精一节）。 一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。 如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。 别把自己家庭作业的问题贴上来黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由你来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。 如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的使用者邮件列表或论坛中提问。尽管黑客们会看出来，但一些有经验的使用者也许仍会给你一些提示。 去掉无意义的提问句避免用无意义的话结束提问，例如有人能帮我吗？或者这有答案吗？。 首先：如果你对问题的描述不是很好，这样问更是画蛇添足。 其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：没错，有人能帮你或者不，没答案。 一般来说，避免用 是或否、对或错、有或没有类型的问句，除非你想得到是或否类型的回答。 即使你很急也不要在标题写紧急这是你的问题，不是我们的。宣称紧急极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，紧急这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。 有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。 当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如紧急：帮我救救这个毛绒绒的小海豹！肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。 如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。 礼多人不怪，而且有时还很有帮助彬彬有礼，多用请和谢谢您的关注，或谢谢你的关照。让大家都知道你对他们花时间免费提供帮助心存感激。 坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的） 然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。 （我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得先谢了意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说先谢了，然后事后再对回复者表示感谢，或者换种方式表达感激，譬如用谢谢你的关注或谢谢你的关照。） 问题解决后，加个简短的补充说明问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。 最理想的方式是向最初提问的话题回复此消息，并在标题中包含已修正，已解决或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串问题 X和问题 X - 已解决的潜在回复者就明白不用再浪费时间了（除非他个人觉得问题 X的有趣），因此可以利用此时间去解决其它问题。 补充说明不必很长或是很深入；简单的一句你好，原来是网线出了问题！谢谢大家 – Bill比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。 对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此之后才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。 除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。 至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。 思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。 在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。 如何解读答案 RTFM 和 STFW：如何知道你已完全搞砸了有一个古老而神圣的传统：如果你收到RTFM （Read The Fucking Manual）的回应，回答者认为你应该去读他妈的手册。当然，基本上他是对的，你应该去读一读。 RTFM 有一个年轻的亲戚。如果你收到STFW（Search The Fucking Web）的回应，回答者认为你应该到他妈的网上搜索。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 **Google 是你的朋友**！） 在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。 通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为 你需要的信息非常容易获得； 你自己去搜索这些信息比灌给你，能让你学到更多。 你不应该因此不爽；依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见。你应该对他祖母般的慈祥表示感谢。 如果还是搞不懂如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。 比方说，如果我回答你：看来似乎是 zentry 卡住了；你应该先清除它。，然后，这是一个很糟的后续问题回应：zentry 是什么？ 好的问法应该是这样：哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？ 处理无礼的回应很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。 如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这没有发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而你将被视为有错的一方，这将伤害到你获取信息或帮助的机会。 另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。 （有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会正常交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们喜欢我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑）。 Jeff Bigler 的观察总结和这个相关也值得一读 (tact filters)。 在下一节，我们会谈到另一个问题，当你行为不当时所会受到的冒犯。 如何避免扮演失败者在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。 这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做： 熬过去，这很正常。事实上，它是有益健康且合理的。 社区的标准不会自行维持，它们是通过参与者积极而公开地执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。 也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称如果你不想帮助用户就闭嘴。 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。 夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。 记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心你和他的社区而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。 有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是真的会把问题搞砸。 这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。 也别让自己卷入口水战，最好不要理睬大多数的口水战 – 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。 不该问的问题以下是几个经典蠢问题，以及黑客没回答时心中所想的： 问题：我能在哪找到 X 程序或 X 资源？ 问题：我怎样用 X 做 Y？ 问题：如何设定我的 shell 提示？ 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？ 问题：我的程序/设定/SQL 语句没有用 问题：我的 Windows 电脑有问题，你能帮我吗？ 问题：我的程序不会动了，我认为系统工具 X 有问题 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？ 问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？ 问题：我能在哪找到 X 程序或 X 资源？ 回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 Google 吗？ 问题：我怎样用 X 做 Y？ 回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。 问题：如何设定我的 shell 提示？？ 回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 RTFM，然后自己去找出来。 问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？ 回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。 问题：我的{程序/设定/SQL 语句}不工作 回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种 你还有什么要补充的吗？ 真糟糕，希望你能搞定。 这关我有什么屁事？ 问题：我的 Windows 电脑有问题，你能帮我吗？ 回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。 注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你可以问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。 问题：我的程序不会动了，我认为系统工具 X 有问题 回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库档案有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。 问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？ 回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在这儿找到使用者群组的清单）。 注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 Linux 和所有被怀疑的硬件作关键词仔细搜索。 问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？ 回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！ 好问题与蠢问题最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。 蠢问题： 我可以在哪儿找到关于 Foonly Flurbamatic 的资料？ 这种问法无非想得到 STFW 这样的回答。 聪明问题： 我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？ 这个问题已经 STFW 过了，看起来他真的遇到了麻烦。 蠢问题： 我从 foo 项目找来的源码没法编译。它怎么这么烂？ 他觉得都是别人的错，这个傲慢自大的提问者。 聪明问题： foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？ 提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。 蠢问题： 我的主机板有问题了，谁来帮我？ 某黑客对这类问题的回答通常是：好的，还要帮你拍拍背和换尿布吗？，然后按下删除键。 聪明问题： 我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？ 这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。 在最后一个问题中，注意告诉我答案和给我启示，指出我还应该做什么诊断工作之间微妙而又重要的区别。 事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。 通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。 事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的名人，而是因为我用了正确的方式来提问。 黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我像个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。 如果得不到回答如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。 总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。 你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。 有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。 另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。 对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。 如何更好地回答问题态度和善一点。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。 对初犯者私下回复。对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。 如果你不确定，一定要说出来！一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。 如果帮不了忙，也别妨碍他。不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 —— 有些可怜的呆瓜会把它当成真的指令。 试探性的反问以引出更多的细节。如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。 尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。 如果你决定回答，就请给出好的答案。当别人正在用错误的工具或方法时别建议笨拙的权宜之计（wordaround），应推荐更好的工具，重新界定问题。 正面的回答问题！如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 试试看 A 或是 B 或者 试试 X 、 Y 、 Z 、 A 、 B 、 C 并附上一个链接一点用都没有。 帮助你的社区从问题中学习。当回复一个好问题时，问问自己如何修改相关文件或常见问题文件以免再次解答同样的问题？，接着再向文件维护者发一份补丁。 如果你是在研究一番后才做出的回答，展现你的技巧而不是直接端出结果。毕竟授人以鱼不如授人以渔。 相关资源如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 Unix 系统和网络基本原理。 当你发布软件或补丁时，试着按软件发布实践操作。 鸣谢Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写如何更好地回答问题这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。","categories":[{"name":"转载","slug":"转载","permalink":"https://laijiahao.cn/categories/%E8%BD%AC%E8%BD%BD/"}],"tags":[{"name":"提问的智慧","slug":"提问的智慧","permalink":"https://laijiahao.cn/tags/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/"}]},{"title":"搭建我的世界服务器","slug":"mcsever","date":"2020-04-21T12:49:07.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/04/21/mcsever/","link":"","permalink":"https://laijiahao.cn/2020/04/21/mcsever/","excerpt":"近期终于想到闲置的服务器应该做什么了，于是有了这篇搭建我的世界服务器的教程（可怜我的服务器闲置了半年）本篇教程不适合服务器纯小白，不会给你解释一些命令之类的，如果你了解一些linux命令，那这篇教程是不吃力的","text":"近期终于想到闲置的服务器应该做什么了，于是有了这篇搭建我的世界服务器的教程（可怜我的服务器闲置了半年）本篇教程不适合服务器纯小白，不会给你解释一些命令之类的，如果你了解一些linux命令，那这篇教程是不吃力的 我的服务器配置我的服务器只是拿来3个人联机用的，所以这个配置应该是够了，如果是4人以上你需要更大的配置。 操作系统：CentOS 7.6 64位 CPU：1核 内存：1GB 公网带宽： 1Mbps 连接服务器1ssh root@ip 安装依赖Centos7 1sudo yum install java-1.8.0-openjdk ubuntu 12sudo apt-get updatesudo apt-get install openjdk-8-jdk 检测是否成功1java -version 安装宝塔宝塔的安装教程请到官网查看 安装教程 部署MC服务器创建Minecraft游戏运行目录设置Minecraft的运行路径：打开宝塔面板，进入文件-根目录-新建目录-输入你想取的名称-确定创建 下载服务文件12cd /MCsudo wget https://launcher.mojang.com/v1/objects/3737db93722a9e39eeada7c27e7aca28b144ffa7/server.jar 如果你没有wget可以使用你的包管理命令下载安装 关闭防火墙1systemctl stop firewalled.servce 阿里云的服务器还需要在阿里后台，放行25565端口 运行Minecraft以及配置服务器自己查看一下，下载下来的文件叫什么我是server.jar 下面的命令对应的地方改为你下载下来的文件名 1java -Xmx1500M -Xms666M -jar server.jar 注意：1.Xms666是服务器k启动所占最大（运行）内存，Xmx1500是服务器正常运行最大内存2.我游戏路径是/MC是路径，即pwd后的路径这个时候，如果你是第一次运行，是会报错的，请继续往下看 同意用户许可文件eulaw.txt这是报错信息 我这里使用vi进行修改，你也可以去宝塔修改 在Minecraft运行路径下，终端输入： 1vi eula.txt 把eula=false,改为eula=true 此时你再执行,就可以了 1java -Xmx1500M -Xms666M -jar server.jar 如何进入服务器连接服务器的格式如下 注意符号是英文 1ip:25565 停止服务器1stop","categories":[{"name":"服务器","slug":"服务器","permalink":"https://laijiahao.cn/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}],"tags":[{"name":"我的世界","slug":"我的世界","permalink":"https://laijiahao.cn/tags/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"}]},{"title":"Arch双显卡方案","slug":"arch-newsil","date":"2020-04-05T14:32:15.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/04/05/arch-newsil/","link":"","permalink":"https://laijiahao.cn/2020/04/05/arch-newsil/","excerpt":"在linux下，你可能知道大黄蜂这个双显卡方案，在arch也有，但是本篇文章会告诉你一个最正确最简单的双显卡方案","text":"在linux下，你可能知道大黄蜂这个双显卡方案，在arch也有，但是本篇文章会告诉你一个最正确最简单的双显卡方案 前言笔记本，还在纠结Intel核显+NVIDIA独显的双显卡方案吗？ 你是使用NVIDIA独显闭源驱动、大黄蜂切换、还是选择nouveau 到底选什么如果只安装闭源驱动，当然可以，但是要知道，耗电速度可能远远超过你的持久 现在我给你介绍NVIDIA Optimus这一个在arch下最好的最简单的双显卡方案。 它和ubuntu下的PRIME类似，通过在显卡管理器中更改配置文件来使用核显或独显。 它到底有多简单呢？ 请随我安装 安装NVDIA Optimus我们只需要安装两个包 123456pacman -S nvidia bbswitch yaourt -S optimus-manager-qt# 托盘程序#如果配置有archlinuxcn源，也可以使用pacman来安装#如果使用KDE桌面，需安装optimus-manager-qt-kde 注意: 安装英伟达闭源驱动时，如果使用自定义内核，或者不想驱动崩掉，那就安装nvidia-dkms，bbswitch也是同理，安装bbswitch-dkms如:1pacman -S nvidia-dkms bbswitch-dkms 安装optimus-manager-qt时，kde桌面需要在后面加上-kde1yaourt -S optimus-manager-qt 重启此时你可以在托盘看见英伟达的图片，右键-设置 在项optimus中，把switching method改为Bbswitch 然后确定即可 如何使用直接右键，有三个选项 switch to intel switch to Nvidia switch to Hybrid（无需理会） 直接选择即可，是不是很简单！","categories":[{"name":"arch","slug":"arch","permalink":"https://laijiahao.cn/categories/arch/"}],"tags":[{"name":"arch","slug":"arch","permalink":"https://laijiahao.cn/tags/arch/"}]},{"title":"git使用双秘钥","slug":"gittwossh","date":"2020-04-03T12:33:42.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/04/03/gittwossh/","link":"","permalink":"https://laijiahao.cn/2020/04/03/gittwossh/","excerpt":"由于新项目需要两个github账号，然后一个git秘钥只能绑定一个号，所以特地写出教程，教你如何配置双秘钥","text":"由于新项目需要两个github账号，然后一个git秘钥只能绑定一个号，所以特地写出教程，教你如何配置双秘钥 生成秘钥生成两个秘钥 12$ ssh-keygen -t rsa -C &quot;你的邮箱&quot;$ ssh-keygen -t rsa -C &quot;你的邮箱&quot; -f ~/.ssh/名字(如huanhao) 添加私钥添加私钥1 1$ ssh-add ~/.ssh/id_rsa 添加私钥2 1$ ssh-add ~/.ssh/名字 如果执行ssh-add时提示”Could not open a connection to your authentication agent”，可以现执行命令： 1$ ssh-agent bash 相关命令 12345# 可以通过 ssh-add -l 来确私钥列表$ ssh-add -l# 可以通过 ssh-add -D 来清空私钥列表$ ssh-add -D 修改配置文件在~/.ssh 目录下新建一个config文件，不要后缀 12$ cd ~/.ssh$ touch config 添加以下内容 1234567891011# githubHost gitlab.com HostName gitlab.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa# github1Host github1.com HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/名字 修改文件权限在~/.ssh目录下修改权限 1chmod 600 * 验证分别输出两个不同的名字，证明成功 12ssh -T git@github.comssh -T git@github1.com 克隆仓库使用第二个秘钥时，需要修改对应的github.com 1git@github1.com:用户名/仓库.git","categories":[{"name":"git","slug":"git","permalink":"https://laijiahao.cn/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://laijiahao.cn/tags/git/"}]},{"title":"安装brew的正确姿势","slug":"installbrew","date":"2020-03-31T09:18:29.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/31/installbrew/","link":"","permalink":"https://laijiahao.cn/2020/03/31/installbrew/","excerpt":"你可能尝试了很多办法去安装brew，从一开始的网络超时，到一脸蒙的手动安装，本文教你如何正确安装brew","text":"你可能尝试了很多办法去安装brew，从一开始的网络超时，到一脸蒙的手动安装，本文教你如何正确安装brew 创建Homebrew目录打开你的终端执行下面的命令，进行创建Homebrew 1sudo mkdir /usr/local/Homebrew 同步brew.git库1sudo git clone https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git /usr/local/Homebrew 添加环境变量1sudo ln -s /usr/local/Homebrew/bin/brew /usr/local/bin/brew 同步core库123sudo mkdir -p /usr/local/Homebrew/Library/Taps/homebrew/homebrew-coresudo git clone https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core 同步cask12sudo mkdir -p /usr/local/Homebrew/Library/Taps/homebrew/homebrew-casksudo git clone https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-cask.git /usr/local/Homebrew/Library/Taps/homebrew/homebrew-cask 提权1sudo chown -R $(whoami) /usr/local/Cellar 查看版本号1brew -v 更换镜像源此时你安装东西的话，还是会感受到超时的力量，所以我们需要更换国内镜像源 替换homebrew默认源 123cd &quot;$(brew --repo)&quot;git remote set-url origin git://mirrors.ustc.edu.cn/brew.git bash用户： 123echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.bash_profilesource ~/.bash_profile #刷新 zsh用户 123echo &#x27;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&#x27; &gt;&gt; ~/.zshrcsource ~/.zshrc #刷新 记得要更新 1brew update 我的博客即将同步至腾讯云+社区，邀请大家一同入驻：https://cloud.tencent.com/developer/support-plan?invite_code=2t77vjr03n288","categories":[{"name":"brew","slug":"brew","permalink":"https://laijiahao.cn/categories/brew/"}],"tags":[{"name":"brew","slug":"brew","permalink":"https://laijiahao.cn/tags/brew/"}]},{"title":"【完美解决】picgo上传各种失败问题","slug":"solvepicnet","date":"2020-03-28T03:34:51.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/28/solvepicnet/","link":"","permalink":"https://laijiahao.cn/2020/03/28/solvepicnet/","excerpt":"最近我听说typora可以和picgo一起使用了，于是我就去使用了一下，我发现是真滴香啊 不过用了没多久，还是老毛病，又是一些奇奇怪怪的问题，应该是墙的问题，于是我又是找到了一个项目，可以帮助你中转服务器，然后再上传到github，别提多香！","text":"最近我听说typora可以和picgo一起使用了，于是我就去使用了一下，我发现是真滴香啊 不过用了没多久，还是老毛病，又是一些奇奇怪怪的问题，应该是墙的问题，于是我又是找到了一个项目，可以帮助你中转服务器，然后再上传到github，别提多香！ 工具你需要如下东西: 梯子，不知道哪里有的，请看我博客的导航栏找一下 一个国外邮箱，比如google或者outlook（google好一些） 如果以上两个你都没有，或者不想弄，怎么办？ 请往下看先 创建虚拟主机因为中转服务器需要国外服务器，所以这里使用国外的虚拟主机进行上传，我下面提供一个免费的虚拟主机网站，不过你需要有梯子上这个网站，他的虚拟主机是免费，所以我选择了它 如果你没有梯子给你以下两个方案： 买个梯子，不知道哪里有的，请看我博客的导航栏找一下 使用彩虹云，也是免费的https://www.cccyun.net/ 【推荐】 访问下面的网站，然后注册一个账号，我就不教了 https://www.000webhost.com/ 【推荐使用上面的彩虹云，这是我后来发现的国内网站】 然后回到主页选择免费套餐，你也可以在没有注册之前选择免费套餐，然后注册 需要注意一下：注册邮箱需要是google或者outlook 你都能访问这个网站了，注册一个国外邮箱又不是不可以 如果梯子和国外邮箱你都没有，或者不想弄，请参考下面的方案： 一个国外的虚拟主机（免费的很多，自己找找) 选择白嫖，那么你可以直接看到设置picgo的部分 注册之后会给你的邮箱发验证邮件，点开即可 选择other 上下分别填写网站名称以及密码 选择第三个 登入管理页面之后 你会来到这个页面，我们暂时无需动任何东西 其他国外免费虚拟主机; https://www.cccyun.net/ 【推荐】 配置autopiccdn项目地址如下： https://github.com/kjhuanhao/autoPicCdn fas fa-download 下载之后解压，我们需要修改up.php这个文件 按照提示修改下面的代码： 1234define(&quot;REPO&quot;,&quot;仓库&quot;);//必须是下面用户名下的公开仓库define(&quot;USER&quot;,&quot;github仓库名&quot;);//必须是当前GitHub用户名define(&quot;MAIL&quot;,&quot;yumusb@foxmail.com&quot;);//define(&quot;TOKEN&quot;,&quot;token&quot;);//https://github.com/settings/tokens 去这个页面生成一个有写权限的token（write:packages前打勾） 修改完成之后保存即可 上传up.php回到你的虚拟主机管理界面 进入下面这个目录 点击上传，选择你刚才修改的up.php 访问下面的地址： https://www.000webhost.com/members/website/list 其中有你刚刚建立的网站和地址，我们需要复制地址下来 配置Picgo打开你的picgo 选择插件设置 搜索web-uploader 点击设置，然后选择配置 API地址填写刚刚复制的地址 + /up.php POST参数名填写pic JSON路径填写data.url 确定保存之后你就发现图床多了一个自定义web图床 之后你就直接使用这个自定义web图床即可，它可以先把图片上传到这个国外的虚拟主机，然后再把图片传到github，这样我们就不会遇到各种网路问题了，而且返回的链接是经过cdn加速的 白嫖 你可以使用我的API地址： https://mrhuanhao.000webhostapp.com/up.php 我的博客即将同步至腾讯云+社区，邀请大家一同入驻：https://cloud.tencent.com/developer/support-plan?invite_code=2t77vjr03n288","categories":[{"name":"picgo","slug":"picgo","permalink":"https://laijiahao.cn/categories/picgo/"}],"tags":[{"name":"picgo","slug":"picgo","permalink":"https://laijiahao.cn/tags/picgo/"}]},{"title":"netlify部署博客","slug":"netlifydeploy","date":"2020-03-26T11:09:15.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/26/netlifydeploy/","link":"","permalink":"https://laijiahao.cn/2020/03/26/netlifydeploy/","excerpt":"今天发现github的pages服务居然炸了，不知道谁干的，所以我将目光放到了netlify，以前就早有耳闻，好像速度会比github快，我也不知道是不是，我主要是为了双线部署，解决移动宽带不能访问我博客的原因。不管如何，本篇文章教你如何使用netlify部署你的博客。","text":"今天发现github的pages服务居然炸了，不知道谁干的，所以我将目光放到了netlify，以前就早有耳闻，好像速度会比github快，我也不知道是不是，我主要是为了双线部署，解决移动宽带不能访问我博客的原因。不管如何，本篇文章教你如何使用netlify部署你的博客。 登入Netlify Netlify官网 直接使用你的github账号就可以了，如果无法访问这个网站，那你可能需要挂梯。 部署博客我使用的是hexo所以直接按照以往部署的方式即可 1hexo g -d 你无需更改hexo的任何配置，只需要使用这个命令先部署到github。 如果你使用的是其他静态程序，只需要和你以前一样，先部署到github即可。 创建站点点击New site from Git 然后选择Github 允许登入后，直接选择你要部署的仓库 绑定域名之后等待部署，会给你跳到一个页面，如图： 有一个带netlify的域名，也就是你目前唯一的一个域名，你需要把netlify给你的域名进行解析，使用CNAME记录类型，和你解析github的网站一样。 至于如何解析，我这里就不教了。 然后点击Add domian alias添加你的域名，刷新一下，如果域名变绿色就是解析成功了 使用HTTPS你可以使用官方为你提供的HTTPS证书，但是要做一些配置，我这里直接使用我自己的证书。 免费证书可以到腾讯云申请。 先下载你的证书文件 解压后，可以看到如下文件 我们只需要Apache目录下的证书文件 在HTTPS这里，下面应该有两个按钮，因为我已经绑过域名了，所以和你们显示的不一样 我们选择HTTPS下面的第二个按钮即可 把带有域名并以crt结尾的证书文件，复制粘贴到下面的第一个框 把带有域名以key结尾的文件内容，复制粘贴到第二个框 把带有bundle的文件内容，复制粘贴到第三个框 最后选择install就可以了 完成后如下图显示：","categories":[{"name":"netlify","slug":"netlify","permalink":"https://laijiahao.cn/categories/netlify/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://laijiahao.cn/tags/hexo/"},{"name":"netlify","slug":"netlify","permalink":"https://laijiahao.cn/tags/netlify/"}]},{"title":"Valine评论系统邮件提醒","slug":"emailreply","date":"2020-03-25T03:53:20.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/25/emailreply/","link":"","permalink":"https://laijiahao.cn/2020/03/25/emailreply/","excerpt":"这几天想到，别人给我发的评论，我还要到后台去看，实在是太麻烦了，于是发现了一个好项目valine-admin可以帮我发送邮件评论提醒，这样我就可以实时收到别人给我发的评论。 项目地址","text":"这几天想到，别人给我发的评论，我还要到后台去看，实在是太麻烦了，于是发现了一个好项目valine-admin可以帮我发送邮件评论提醒，这样我就可以实时收到别人给我发的评论。 项目地址 本文章图片素材，部分来自此项目的官网 设置valine邮件提醒我们需要先确保你的valine可以正常发送邮件 访问leancloud 如图设置你的邮件主题 修改邮件主题：你在某某网站的评论收到了新的评论 修改内容：将下面的代码复制到“内容”中，并将其中的你的网址首页链接改为你的网址首页链接。 12345&lt;p&gt;Hi, &#123;&#123;username&#125;&#125;&lt;/p&gt;&lt;p&gt;你在 &#123;&#123;appname&#125;&#125; 的评论收到了新的回复，请点击查看：&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;你的网址首页链接&quot; style=&quot;display: inline-block; padding: 10px 20px; border-radius: 4px; background-color: #3090e4; color: #fff; text-decoration: none;&quot;&gt;马上查看&lt;/a&gt;&lt;/p&gt; 点击“保存”按钮 部署valine-admin 点击 云引擎 -&gt; 设置 填写代码库并保存：https://github.com/zhaojun1998/Valine-Admin 切换到部署标签页，分支使用 master，点击部署即可： 配置变量我们需要设置如下参数： 必选参数 SITE_NAME : 网站名称。 SITE_URL : 网站地址, 最后不要加 / 。 SMTP_USER : SMTP 服务用户名，一般为邮箱地址。 SMTP_PASS : SMTP 密码，一般为授权码，而不是邮箱的登陆密码，请自行查询对应邮件服务商的获取方式。 SMTP_SERVICE : 邮件服务提供商，支持 QQ、163、126、Gmail、&quot;Yahoo&quot;、...... ，全部支持请参考 : Nodemailer Supported services。 — 如这里没有你使用的邮件提供商，请查看自定义邮件服务器 SENDER_NAME : 寄件人名称。 请注意：如果你使用企业邮箱，那么你需要添加其他参数，请参考下方的自定义邮件服务器 自定义邮件服务器如 SMTP_SERVICE 中没有你使用的邮件服务提供商, 也可以进行自定义。 参数配置如下: SMTP_HOST : 邮件服务提供商 SMTP 地址，如 qq : smtp.qq.com，此项需要自行查询或询问其服务商。 SMTP_PORT : 邮件服务提供商 SMTP 端口, 此项需要自行查询或询问其服务商。 SMTP_SECURE : 是否启用加密, 默认为 true，一般不需要设置，如有特殊请自行配置。 此项需要自行查询或询问其服务商。 注: 配置自定义邮件服务器的话，请不要同时配置 SMTP_SERVICE。当 SMTP_SERVICE 未配置时才会启用自定义邮件服务。 休眠策略WEB服务免费版的 LeanCloud 容器，是有强制性休眠策略的，不能 24 小时运行： 每天必须休眠 6 个小时 30 分钟内没有外部请求，则休眠。 休眠后如果有新的外部请求实例则马上启动（但激活时此次发送邮件会失败）。 分析了一下上方的策略，如果不想付费的话，最佳使用方案就设置定时器，每天 7 - 23 点每 20 分钟访问一次，这样可以保持每天的绝大多数时间邮件服务是正常的。 首先需要先配置下 Web 主机的域名，使用定时器时要用到。配置方式如下。 后台登录需要账号密码，需要在这里设置，只需要填写 email、password、username，这三个字段即可, 使用 email 作为账号登陆即可。（为了安全考虑，此 email 必须为配置中的 SMTP_USER 或 TO_EMAIL， 否则不允许登录） LeanCloud 自带定时器[推荐]首先需要添加环境变量，ADMIN_URL：Web 主机域名，如图所示（添加后重启容器才会生效）： 注意, LeanCloud 最近更新了定时器校验规则, 需要将 Cron 表达式写为: 0 */20 7-23 * * ? 高级功能自定义邮件模板目前内置了两款主题，分别为 default 与 rainbow， 需要在 云引擎 -&gt; 设置 -&gt; 环境变量 中配置参数 TEMPLATE_NAME，默认为 default。 此配置会去寻找 template\\&#123;TEMPLATE_NAME&#125; 目录下的 notice.ejs 与 send.ejs 模板文件，分别用于通知站长和通知游客，另外欢迎提供邮件主题样式。 为什么我收不到邮件？ 请确认评论时留下的邮箱不是环境变量里的 SMTP_USER 或 TO_EMAIL 里的邮箱，原因详见 7.30 更新日志。 请确认修改环境变量后已重启容器。 对于 QQ / 网易 163 邮箱，请确认你输入的是 SMTP 的授权码，而不是登陆密码。QQ邮箱获取授权码 网易邮箱获取授权码 其他更多功能请参考项目地址： 项目地址","categories":[{"name":"valine","slug":"valine","permalink":"https://laijiahao.cn/categories/valine/"}],"tags":[{"name":"valine","slug":"valine","permalink":"https://laijiahao.cn/tags/valine/"}]},{"title":"【基础篇】hexo博客搭建教程","slug":"hexobase","date":"2020-03-23T13:48:46.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/hexobase/","link":"","permalink":"https://laijiahao.cn/2020/03/23/hexobase/","excerpt":"【基础篇】搭建hexo博客（一）作者：Huanhao bilibili：Mrhuanhao 前言你是否想拥有属于自己的博客？你是否无奈与自己不会写网站而烦恼？ 不要担心，本系列教程将会实现你白嫖的愿望，连服务器都不需要买，就算没有任何编程基础也可以学会的搭建博客教程","text":"【基础篇】搭建hexo博客（一）作者：Huanhao bilibili：Mrhuanhao 前言你是否想拥有属于自己的博客？你是否无奈与自己不会写网站而烦恼？ 不要担心，本系列教程将会实现你白嫖的愿望，连服务器都不需要买，就算没有任何编程基础也可以学会的搭建博客教程 下面来看看这些好看的个人博客： http://fech.in/ https://xaoxuu.com/ https://nexmoe.com/ https://sakura.hojun.cn/ 以上的博客你是否都心动了呢？我想说的是，它们都是由hexo搭建的，等你学完了基础和进阶篇，上面展示的博客你都可以实现，就让我们一步步来吧！ 这是一个系列教程，有基础篇和进阶篇，让我们看看这两个教程实现的效果 【基础篇】 学会安装相应需要的依赖软件 学会更换主题 学会基本的站点配置 知道怎么生成文章并编辑 上传你的博客并拥有一个可以访问的地址 进阶篇 学会用markdown基本语法编写你的文章 学会如何搭建一个免费的图床并使用 学会进一步配置主题并了解所有主题的基本功能 拥有自己的域名并绑定 使用一些插件让自己博客更完美 备份 搭建之前的准备安装nodejs 下载地址： http://nodejs.cn/download/ 选择windows安装包.msi安装 运行安装包，我们默认选择c盘 在这里选择Add to PATH然后点Next继续就行了 安装Git 下载地址：https://git-scm.com/ 点这里即可下载最新版本，如果你的下载速度比较慢可以选择下面的链接下载 https://www.lanzous.com/i9s7tib 运行安装包，选择合适的安装位置，然后点Next 后面的安装步骤全部只要点Next就行了，不需要我们多余配置 验证nodejs是否安装配置成功我们安装完Git后，在桌面右键会有Git Bash Here，我们直接点开 会出来一个终端，我们分别执行下面的命令 12$ node -v$ npm -v 如果输出了版本号，那么证明配置成功，如果没有版本号，请重新安装nodejs（检查是否勾选Add to Path），或者手动为nodejs添加环境变量 安装cnpm在git bash里面执行下面的命令 1$ npm install -g cnpm --registry=https://registry.npm.taobao.org 检查cnpm是否安装成功 执行 1$ cnpm -v 如果输出版本号就是安装成功了 安装hexo和初始化博客安装hexo在git bash执行下面的命令安装hexo 1$ cnpm install hexo-cli -g 初始化博客选择一个文件夹，然后右键打开git bash 例如：我在F盘新建了一个blog文件夹，就在blog文件夹下打开git bash 然后这里会显示你当前目录 然后执行 1$ hexo init 到Install dependencies的时候你可能会卡住，这是大多数人基本都会遇到的 我们只需要在这里的时候结束命令，按Ctrl + c就可以结束命令 然后执行下面这个命令，就可以使用国内的镜像为你完成博客的初始化工作 1$ cnpm install 其他方法： git clone https://e.coding.net/huanhao/hexoblog.git cnpm install 然后继续下面的步骤 等待命令完成后，就完成了初始化，现在就可以预览我们的博客了 执行下面这个命令 注意：请不要结束命令或者关闭终端 1$ hexo s 然后会出来一段http开头的网址，我们复制下来然后在浏览器打开 就会出现这么一个页面了 更换主题你是否觉得上面的默认主题有点不好看呢？现在教你如何替换主题 hexo的所有主题都在下面这个地址： https://hexo.io/themes/ 你可能会在这个地址看到很多好看的主题，但是我们要慢慢来，有些主题的配置难度还是很高的 我们要找一个功能齐全，配置简单的主题练练手 就是这个新手入门hexo必备的Next主题 预览效果：https://theme-next.org/ 项目地址：https://github.com/theme-next/hexo-theme-next 配置文档：https://theme-next.org/docs/getting-started/ 如你所见，其实每个主题都会包含这个三个东西 预览效果 项目地址 配置文档 点击主题的图片可以打开预览地址，点击主题的标题可以打开项目地址 配置文档我们需要自己去项目地址找，大多数主题的项目地址都是英文，大家可以开翻译找一下 如何下载主题方法1打开主题的项目地址后，点击Clone or download 然后复制https开头的地址 然后在你的博客文件夹下面打开git bash 执行： 1git clone 复制的地址 themes/主题名字 如图： 现在给你解释一下这个命令 git clone 代表克隆，后面接上一串下载地址，最后面的themes/next是把文件夹下载到主题目录下，并把主题文件命名为next 方法2如果你觉得比较麻烦，还有第二个办法 打开主题项目地址，然后点击Clone or download，然后点击Download ZIP 这样可以下载主题文件压缩包，前提是你已经登入了github（没有账号的，请自己注册一下） 然后解压压缩包，把文件夹放在博客目录下的themes目录，并把文件夹命名为主题的名字 修改配置文件在博客的目录下有一个叫_config.yml的文件 将它打开 找到themes这一行，然后将主题名字修改为next 这样的话，主题就成功更换了 预览主题在博客目录打开git bash 执行 1hexo s 还是会出现一段浏览地址，我们在浏览器打开就行了 注意：有些主题你更换之后是暂时无法预览的，因为有的主题还需要安装它需要的依赖，这一般都会在主题的文档里面提到，只有安装它的依赖之后才可以正常预览，这里暂时不做说明，会在hexo教程进阶篇说到 配置主题这里不会做详细的配置介绍，在进阶篇会完整说明 我们需要认识两个文件 站点配置文件 指的是博客根目录下的_config.yml 主题配置文件 指的是某个主题下的_config.yml 它们的名字都叫_config.yml但是你不能弄混淆 在我们看主题文档配置的时候，是必须要分清这两个概念的，不然会报错 我们先来几个基本的配置 设置语言在Next主题的文档里面提到了如何更换语言 它要求我们更改的是站点配置文件，并且给出了代码示范 我们打开站点配置文件 按照要求，将language的配置改成zh-CN，然后保存文件 其他设置现在再来尝试一个 Next主题里面有个Scheme选项，可以更改主题的外观 根据要求，我们需要更改的是主题配置文件 打开主题配置文件，我们尝试scheme改成双栏，也就是需要修改成Pisces 现在已经修改过两个配置了，为了检验是否修改成功，我们需要预览一下主题 在博客根目录下执行 1hexo s 然后打开链接 可以看到都设置成功了 因为这个主题的主题文档是英文的，所以可能配置起来不太方便，我这里有一个中文的 是别人翻译的，不过现在不是最新版本的翻译 http://theme-next.iissnan.com/ 如果你有能力，可以自己挑一个主题进行简单配置，在进阶篇中会使用其他主题为你展示更详细的配置教程 生成文章的编辑工具在博客根目录下面执行： 1$ hexo new &quot;文章链接&quot; 例如：你想创建一个名为”我的第一个博客“的文章 可以执行： 1$ hexo new &quot;my-first-blog&quot; 文章链接建议是英文，然后会显示你的文章生成的目录，每次生成的文章都固定在你的博客根目录下面的source/_posts下 可以看到是一个后缀为.md的文件，这个其实是一个markdown文件，如果你不知道markdown是什么，在进阶篇会告诉你，就算你不会markdown，你可以暂时把这个当成txt文件 我建议你安装Typora编辑.md文件 https://www.typora.io/ 按照目录打开my-firsy-blog.md文件，可以看到一个横线上面有一段信息 这里面是存放你博客信息的地方 title 文章标题 date 文章日期 tag 文章标签 （暂时不说明如何配置，进阶篇会讲到） 然后这时候你可以修改文章标题，并且在横线下面输入你文章的内容 保存之后，你可以在博客根目录打开git bash 执行 1$ hexo s 记得：预览博客都是这个命令 部署你的博客现在我们的博客都是只能本地预览，如何将我们的上传到一个地方，然后通过域名访问呢？ 你可能觉得需要一个服务器再买个域名绑定，我可以告诉你都不需要 下面介绍两种部署方法 先来个对比 github： 国外网站，是英文 访问速度较慢 不需要实名认证 域名形式可以自定义 coding： 国内的平台，网站是中文 访问速度快 部署网站需要实名认证，只需要填写身份证号即可 域名是随机给的，所以很长而且不能自定义 如果你有自己的域名，github和coding都可以绑定域名 coding https://coding.net/user 注册一个coding的账号，这里不做演示 然后按照图片新建一个项目 选择devops 填入相关信息，记得勾选**启用README.cd文件初始化项目** 然后完成创建 我们暂时不能直接上传，需要进行一些配置，如下： 接下来需要我们创建一个git秘钥 打开git bash（不要求在哪个目录） 执行： “这里面是你的邮箱” 不管出现什么信息，你只需要回车就可以了 1$ ssh-keygen -t rsa -C “your_email@youremail.com“ 然后执行 1$ cat ~/.ssh/id_rsa.pub 会输出你的秘钥，我们复制输出信息就行了 然后点击头像，打开个人设置–选择SSH公钥–新增公钥 然后将你复制的秘钥粘贴进去，记得勾选永久有效 然后打开git bash 执行： 1$ ssh -T git@git.coding.net 会提示你下面这个，输入yes回车就行了 1Are you sure you want to continue connecting (yes/no/[fingerprint])? 接下来打开你的项目选择SSH，然后复制右边git开头的地址 打开站点配置文件 修改deploy信息 1234deploy: type: git repo: 你复制的地址 branch: master 例如： 在博客根目录下打开git bash 分别执行下面的命令： yourname是你的名字 youremail是你的邮箱 12$ git config --global user.name &quot;yourname&quot;$ git config --global user.email &quot;youremail&quot; 然后安装上传插件 1cnpm install hexo-deployer-git --save 上传 以上的配置完成之后，就可以上传了 在博客根目录下打开git bash，执行下面的命令就可以上传了 1hexo g -d 然后打开项目，打开构建与部署–静态网站–立即发布静态网站 注意：coding需要实名认证，只需要你输入身份证号就可以了，不用担心泄露隐私，因为coding现在是腾讯的 我们只要填写网站名称就行了，然后保存 因为是刚构建的网站，所以要手动部署一下，以后上传就不需要手动部署 然后访问所给的地址，那个就是我们网站的地址了 之后每次修改完博客要上传的时候，只需执行上传命令 github部署你还可以使用github部署你的博客 这里不演示如何注册账号 创建一个仓库 仓库名必须是用户名 + .github.io 然后勾选初始化README 我们暂时不能直接上传，需要进行一些配置，如下： 接下来需要我们创建一个git秘钥 打开git bash（不要求在哪个目录） 执行： “这里面是你的邮箱” 不管出现什么信息，你只需要回车就可以了 1$ ssh-keygen -t rsa -C “your_email@youremail.com“ 然后执行 1$ cat ~/.ssh/id_rsa.pub 会输出你的秘钥，我们复制输出信息就行了 然后点击头像，点击Settings–SSH·····–New SSH Key 粘贴你复制的秘钥 然后打开git bash 执行： 1$ ssh -T git@github.com 会提示你下面这个，输入yes回车就行了 1Are you sure you want to continue connecting (yes/no/[fingerprint])? 打开项目，点击绿色按钮，点击Use SSH 复制git开头的地址 打开站点配置文件 修改deploy信息 1234deploy: type: git repo: 你复制的地址 branch: master 例如： 在博客根目录下打开git bash 分别执行下面的命令： yourname是你的名字 youremail是你的邮箱 12$ git config --global user.name &quot;yourname&quot;$ git config --global user.email &quot;youremail&quot; 然后安装上传插件 1cnpm install hexo-deployer-git --save 上传 以上的配置完成之后，就可以上传了 在博客根目录下打开git bash，执行下面的命令就可以上传了 1hexo g -d 然后打开项目，点击Settings 往下滑找到Github pages 点击none 选择master branch 之后你会得到一个地址，这个就是你的网站地址了 教程结束，进阶篇请期待","categories":[{"name":"搭建网站","slug":"搭建网站","permalink":"https://laijiahao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"},{"name":"hexo","slug":"搭建网站/hexo","permalink":"https://laijiahao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://laijiahao.cn/tags/hexo/"}]},{"title":"【hexo博客进阶】2.图床的使用和搭建","slug":"picee","date":"2020-03-23T13:47:16.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/picee/","link":"","permalink":"https://laijiahao.cn/2020/03/23/picee/","excerpt":"前言在markdown的学习里面，我们知道只有插入超链接的图片，才能使博客速度加快，所以本教程教你如何使用图床，如果你希望自己搭建一个，也会在本教程提到","text":"前言在markdown的学习里面，我们知道只有插入超链接的图片，才能使博客速度加快，所以本教程教你如何使用图床，如果你希望自己搭建一个，也会在本教程提到 使用sm.ms图床在网上有很多免费的图床例如： https://sm.ms/ 点击中间的上传区域，可以打开你的文件夹进行选择要上传的图片，你还可以直接拖拽图片到中间，甚至可以粘贴剪切板的图片。 然后点击Upload上传图片，你还可以选择多个图片批量上传 之后在下方有不同格式的链接，你可以复制markdown的格式，直接粘贴到文章即可 如何使用picee如果是以前，我会推荐你使用picgo，这是一款图床软件，可以配置多个平台的图床，但是经常会因为网络问题，上传失败，于是我找到了替换他的，就是picee 这是一个大佬写的浏览器插件，支持你上传图片到Github，然后自动获取github的链接 这种方法有以下优点： 可以自己管理的免费图床 不经常出现上传失败的现象 可快捷输出图片的链接 作为浏览器插件，小巧好用 我将picee进行了优化，把他做成了网页，并且输出的是经过jsdelivrcdn加速的地址，可以让你的博客访问速度达到极致化！ 使用方法十分简单： 这是我搭建的网页地址，是一个静态网页，我还进行了汉化，有中文页面 https://picup.mrhuanhao.cn/ 可以看到上方有两个登入方式，一个是token一个是账号密码登入 随便选择一个方式进行登入，我选账号密码，然后点击Auth登入 然后在这里，上方的左边是输入用户名/仓库名 右边是输入文件夹名，如果你没有创建文件夹，无需担心，这个工具会为你自动创建 输入完毕记得打钩 如何自己搭建picee项目地址： https://github.com/jrainlau/picee 我优化之后的项目地址： https://huanhao.coding.net/p/picup 你可以直接使用我优化后的项目，直接部署就可以用了，如何你想进一步进行优化，可以提交合并请求给我哦！","categories":[{"name":"picee","slug":"picee","permalink":"https://laijiahao.cn/categories/picee/"}],"tags":[{"name":"picee","slug":"picee","permalink":"https://laijiahao.cn/tags/picee/"},{"name":"图床","slug":"图床","permalink":"https://laijiahao.cn/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"【hexo博客进阶】1.Markdown语法","slug":"markdown","date":"2020-03-23T13:47:10.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/markdown/","link":"","permalink":"https://laijiahao.cn/2020/03/23/markdown/","excerpt":"前言如果你想让你的博客，看起来更加美观，学习markdown是必要的，你不需要存在害怕的心理，因为markdown十分简单，就是记住几个符号就行了，不是你想象的他和学习编程语言一样复杂。 在开始之前，我们需要一个markdown的编辑器，来帮助我们识别markdown的文本，我推荐你使用**Typora** https://www.typora.io/","text":"前言如果你想让你的博客，看起来更加美观，学习markdown是必要的，你不需要存在害怕的心理，因为markdown十分简单，就是记住几个符号就行了，不是你想象的他和学习编程语言一样复杂。 在开始之前，我们需要一个markdown的编辑器，来帮助我们识别markdown的文本，我推荐你使用**Typora** https://www.typora.io/ 教程顺序参考https://www.runoob.com/markdown/ 标题语法展示： 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 我们常常需要用到标题，在markdown中标题使用#号表示，一个#代表1级标题，一共有6个级别，他们的大小依次变小 段落在markdown里面段落没有语法，但是你还是需要注意怎么划分段落 如果你一直编辑一段文字，没有空格两个以上并且按下回车键（换行），这一段文字就自成一段 在Typora里面只需要回车换行 字体在markdown里面也有斜体粗体，语法如下： 123456*斜体文本*_斜体文本_**粗体文本**__粗体文本__***粗斜体文本***___粗斜体文本___ 我不太建议你用下划线，因为下划线会连在一起，不好区分数量，建议使用下面的语法形式： 123*斜体文本***粗体文本*****粗斜体文本*** 分隔线在你编辑很多文字之后，如果不使用分隔线，可能会让读者错乱，使用分隔线会有一种层次感。 分隔线在一行中，使用三个以上的星号、减号、下划线来建立(可以隔开) 语法： 12345***----------_ _ _ 删除线删除线就是给文本加上删除线，在文本两端使用两个波浪线~ 1~~文本~~ 下划线在markdown里面并没有关于下划线的语法，但是markdown允许你插入一些基本的HTML代码，下划线语法如下： 1&lt;u&gt;这是一个有下划线的文本&lt;/u&gt; 列表列表分为有序和无序 无序列表无序列表使用星号*、加号 +、减号 - 语法如下： 123456789101112* 第一项* 第二项* 第三项+ 第一项+ 第二项+ 第三项- 第一项- 第二项- 第三项 注意需要和符号之间保持一个空格 有序列表有序列表其实很简单，就是数字加上. 文本使用空格隔开 1231. 第一项2. 第二项3. 第三项 列表嵌套有序和无序可以一起使用，只需要在子列表的选项添加四个空格 语法： 1234561. 第一项： - 子列表1 - 子列表22. 第二项： - 子列表1 - 子列表2 区块区块是用来引用的，比如链接或者一段文本 在段落的开头使用&gt;符号，使用空格，隔开文本 123&gt; 引用的内容&gt;&gt; 第二段引用的内容 在引用里面也是分段落的，我们不是使用回车，而是使用&gt;成单个一行 区块嵌套1234&gt; 引用&gt;&gt; 2&gt;&gt;&gt;&gt;&gt;3 代码块这是一个程序员专用的语法，代码块可以展示不同语言的代码，并且有不同的高亮显示，代码块语法如下: 上下使用三个点进行包裹，最顶上的可以写上代码的类型 12345​```javascript$(document).ready(function () &#123; alert(&#x27;RUNOOB&#x27;);&#125;);​``` 链接插入链接有两种方式： 第一种：直接插入 https://mrhuanhao.cn/ 这种方式适用于短的链接，但是过长的链接可能会看起来不得当 第二种：使用markdown语法插入 其实就是让一段文本，拥有跳转功能 语法如下： 12345[链接名称](链接地址)或者&lt;链接地址&gt; 例如： 1[huanhao的主页](https://mrhuanhao.cn/) 1&lt;https://mrhuanhao.cn/&gt; 图片在一个文章里面插入图片是必不可少的，本地的文章可以使用本地图片，在你上传博客之后，也必须上传本地图片，但这样会有弊端。 使用本地图片会严重拖慢博客速度，我们需要使用超链接进行插入图片，也就是把图片上传的某个服务器上面，然后获取图片在服务器上面的地址。 但是我们也可以使用免费的托管或者图床，上传我们的图片，本篇教程不教图床的使用，下篇文章将会提到。 插入图片的语法： 1![图片描述](图片的链接) 表格在markdown里面是可以插入表格的，可以体现一些数据 语法： 1234| 表头 | 表头 || ---- | ---- || 单元格 | 单元格 || 单元格 | 单元格 | 让表格自动对其方式 居右-: 居左:- 居中:-: 语法如下： 1234| 左对齐 | 右对齐 | 居中对齐 || :-----| ----: | :----: || 单元格 | 单元格 | 单元格 || 单元格 | 单元格 | 单元格 | 我们只需要在第二行插入分隔线 转义字符因为在markdown的语法里面，用了一些特定的符号作为语法，如果我们想输出符号，而不是被识别成语法，就需要使转义字符 只需要使用反斜杠，然后加上下面的某个符号即可 123456789101112\\ 反斜线` 反引号* 星号_ 下划线&#123;&#125; 花括号[] 方括号() 小括号# 井字号+ 加号- 减号. 英文句点! 感叹号 不使用转义字符： 使用了转义字符 其他高级语法在大多的markdown编辑器中，可能无法展示高级语法，以上的语法完全够用，你也可以无需学习高级语法。 高级语法有如下内容(只展示部分）： 数学公式 12345678$$\\mathbf&#123;V&#125;_1 \\times \\mathbf&#123;V&#125;_2 = \\begin&#123;vmatrix&#125; \\mathbf&#123;i&#125; &amp; \\mathbf&#123;j&#125; &amp; \\mathbf&#123;k&#125; \\\\\\frac&#123;\\partial X&#125;&#123;\\partial u&#125; &amp; \\frac&#123;\\partial Y&#125;&#123;\\partial u&#125; &amp; 0 \\\\\\frac&#123;\\partial X&#125;&#123;\\partial v&#125; &amp; \\frac&#123;\\partial Y&#125;&#123;\\partial v&#125; &amp; 0 \\\\\\end&#123;vmatrix&#125;$&#123;$tep1&#125;&#123;\\style&#123;visibility:hidden&#125;&#123;(x+1)(x+1)&#125;&#125;$$ HTML元素 1&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt; 流程图 1234567891011``flowst=&gt;start: 开始框op=&gt;operation: 处理框cond=&gt;condition: 判断框(是或否?)sub1=&gt;subroutine: 子流程io=&gt;inputoutput: 输入输出框e=&gt;end: 结束框st-&gt;op-&gt;condcond(yes)-&gt;io-&gt;econd(no)-&gt;sub1(right)-&gt;op​```","categories":[],"tags":[{"name":"markdown","slug":"markdown","permalink":"https://laijiahao.cn/tags/markdown/"},{"name":"hexo","slug":"hexo","permalink":"https://laijiahao.cn/tags/hexo/"}]},{"title":"【MAC风】kde美化","slug":"prettykde","date":"2020-03-23T13:45:08.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/prettykde/","link":"","permalink":"https://laijiahao.cn/2020/03/23/prettykde/","excerpt":"【Mac风格kde】Archlinux美化教程本文章的教程会在bilibili录成视频版本 关注我：Mrhuanhao","text":"【Mac风格kde】Archlinux美化教程本文章的教程会在bilibili录成视频版本 关注我：Mrhuanhao 安装全局主题打开设置，打开全局主题，然后点击【Get Now Global Themes】 找到【McMojave LAF】主题，然后安装 如果你想用黑暗主题，先选择暗色微风应用，然后再继续下面的步骤 打开plasma选择McMojave ，然后应用 图标图标的主题是McMojave-circle 建议安装blue 光标安装完全局主题会有McMojave Cursors GTK3风格McMojave 窗口装饰McMojave Aurorae 修改顶部直接拖拽继续了 桌面特效模糊Blur 窗口管理–kwin脚本force blur kvantum安装 1sudo pacman -S kvantum-qt5 点change/delete theme 选择KvMojave 然后选择use this theme 点Configure arctive theme 勾选transparent menu title 打开compositing *** 将window opacity by 改成 5% 将menu opacity 改成 15% 记得点击save保存 应用程序风格 然后建议重启一下系统，让设置生效 面板（顶部栏）只需要我们把下面的面板删掉，新建一个空白面板移动上去就可以了 然后添加自己喜欢的组件，显示标题的部件： application title dock栏安装 1sudo pacman -S latte-dock 我的设置参数","categories":[{"name":"linux","slug":"linux","permalink":"https://laijiahao.cn/categories/linux/"}],"tags":[{"name":"kde","slug":"kde","permalink":"https://laijiahao.cn/tags/kde/"},{"name":"archlinux","slug":"archlinux","permalink":"https://laijiahao.cn/tags/archlinux/"},{"name":"linux","slug":"linux","permalink":"https://laijiahao.cn/tags/linux/"}]},{"title":"【桌面篇】ArchLinux安装kde桌面","slug":"archlinuxdesktop","date":"2020-03-23T13:42:35.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/archlinuxdesktop/","link":"","permalink":"https://laijiahao.cn/2020/03/23/archlinuxdesktop/","excerpt":"为你的arch安装kde桌面","text":"为你的arch安装kde桌面 ArchLinux安装配置手册[桌面篇]现在你的U盘可以拔掉了，重启后会发现和刚刚没什么区别，还是命令行的界面，别着急现在就带你安装桌面环境。 连接网络首先检查一下网络是否连接成功 1ping www.baidu.com 如果没有那就执行下面的命令连接，相信你知道怎么连接。 有线网络 1dhcpcd 无线网络 1wifi-menu 添加用户如果这里不添加，安装完桌面后，登录界面没有用户出现(root用户不会出现在gdm登录界面) 而且使用root权限会有危险 12useradd -m -g users -s /bin/bash xxxx #添加xxxx用户，用户名你自定义passwd xxxx #为xxxx用户设置密码 配置新用户的sudo权限1vim /etc/sudoers #编辑配置文件 在root ALL = (ALL) ALL下添加xxxx ALL = (ALL) ALL;输入:wq!强制保存退出vim 安装声卡驱动1pacman -S alsa-utils pulseaudio-alsa Arch Linux默认开启了声音支持，默认静音 可通过alsamixer命令＋字母[M] 取消静音 方向键上下调节音量 字母[M]取消静音 [Q],[W],[E] 增大 左,右,通道 的音量 [Z],[X],[C] 减小 左,右,通道 的音量 安装显卡驱动123456lspci | grep VGA #查看显卡型号(例如：Intel Corporation HD Graphics 530)00:02.0 VGA compatible controller: Intel Corporation HD Graphics 530 (rev 06) lspci | grep 3D #查看独显型号(例如：NVIDIA Corporation GM107M [GeForce GTX 950M])01:00.0 3D controller: NVIDIA Corporation GM107M [GeForce GTX 950M] (rev a2) #(rev a2) 表示正在运行，如果是ff则未运行pacman -S 驱动包名字 参照下图根据你的显卡类型，选择相应驱动包 123xf86-video-intel #——Intelxf86-video-nouveau #——Geforce7xf86-video-304xx #——Geforce6/7 显卡类型 如果你还有独显NVIDIA可以使用,可以一并安装pacman -S xf86-video-intel nvidia 双显卡这里不提出方案，请查阅Arch wiki 安装X窗口系统123pacman -S xorg #安装xorgpacman -S xf86-input-synaptics #安装触摸板驱动pacman -S ttf-dejavu wqy-zenhei wqy-microhei #安装常用字体 安装桌面只展示KDE和GNOME，后面的进阶教程以KDE为主 KDEKDE桌面 安装plasma-meta元软件 1pacman -S plasma KDE应用和SDDM图形登录界面 12pacman -S kde-applications pacman -S sddm sddm-kcm 安装网络管理工具 1pacman -S networkmanager netctl 开启相关服务 此处需要root权限 1su 123systemctl enable NetworkManager systemctl enable sddmsystemctl enable dhcpcd 1reboot # 重启进入桌面 到这里恭喜你成功安装完桌面系统，赶快重启进入桌面吧！","categories":[{"name":"linux","slug":"linux","permalink":"https://laijiahao.cn/categories/linux/"}],"tags":[{"name":"kde","slug":"kde","permalink":"https://laijiahao.cn/tags/kde/"},{"name":"archlinux","slug":"archlinux","permalink":"https://laijiahao.cn/tags/archlinux/"},{"name":"linux","slug":"linux","permalink":"https://laijiahao.cn/tags/linux/"}]},{"title":"【系统篇】ArchLinux系统安装","slug":"archlinuxsystem","date":"2020-03-23T13:41:30.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/archlinuxsystem/","link":"","permalink":"https://laijiahao.cn/2020/03/23/archlinuxsystem/","excerpt":"本教程为最新安装Linux的教程，想看更详细可以到我B站主页看视频教程本教程参考自 https://wiki.archlinux.org/index.php/Installation_guide本教程于2019.11.9日编写，请根据查阅时间参考本教程（官网安装方式未更新，则本教程保持最新状态）教程中的镜像更新时间：2019.11.01","text":"本教程为最新安装Linux的教程，想看更详细可以到我B站主页看视频教程本教程参考自 https://wiki.archlinux.org/index.php/Installation_guide本教程于2019.11.9日编写，请根据查阅时间参考本教程（官网安装方式未更新，则本教程保持最新状态）教程中的镜像更新时间：2019.11.01 ArchLinux安装配置手册[系统篇]本教程参考自 https://wiki.archlinux.org/index.php/Installation_guide 本教程于2019.11.9日编写，请根据查阅时间参考本教程（官网安装方式未更新，则本教程保持最新状态） 教程中的镜像更新时间：2019.11.01 作者：Huanhao bilibili：Mrhuanhao 转载请标明出处！ Mrhuanhao 安装前的准备镜像下载地址：https://archlinux.org/download/ 未使用过Linux的用户，建议先了解一下Linux 如果你是从HTTP镜像源下载的镜像，我建议你检查一下签名： https://wiki.archlinux.org/index.php/GnuPG 启动Live环境（1）制作启动盘 如果你是Windows用户，你可以使用Rufus来制作，具体使用方法你可以查阅一下百度。 如果你是Linux用户，你只需要使用dd命令即可，相信你肯定会的。 （2）进入Live环境 选择从带有 Arch 安装文件的媒介启动通常是在你电脑开机的时候按下某个按键，一般会在启动画面有提示。不同的主板按键不同。 当 Arch 菜单出现时，选择 Boot Arch Linux 并按 Enter 进入安装环境。 验证启动模式（重要）可以列出 efivars 目录以验证启动模式： 1ls /sys/firmware/efi/efivars 如果目录不存在，系统可能以 BIOS 或 CSM 模式启动，详见您的主板手册。 如果目录存在。系统就是以UEFI启动。 请记住你的启动模式！！！ 连接网络 请选择其中一种方式连接 1.连接网线 1dhcpcd 2.连接WiFi 1wifi-menu 3.使用ADSL宽带连接 12pppoe-setup #配置systemctl start adsl #连接ADSL 检查网络连接使用ping检查网络连接，如果看到是如图的样子，证明网络连接成功 1ping www.baidu.com Ctrl+c可以结束命令的运行 更新系统时间 使用 timedatectl 确保系统时间是准确的： 1timedatectl set-ntp true 建立硬盘分区查看硬盘情况 1fdisk -l 可以看到我有一块30G大小的硬盘，路径是/dev/sda,loop0是镜像文件 一般硬盘路径都是/dev/sda的格式，如果你有其他硬盘，也许会再多显示一个/dev/sdxx，请根据其详细信息辨认。 如果你有固态硬盘sda可能会变成nvme0n1 也可以通过lsblk查看硬盘信息 1lsblk 1234567891011NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINTloop0 7:0 0 476.7M 1 loop /rn/archiso/sfs/airootfs #iso镜像sda 8:0 0 465.8G 0 disk #465.8G的机械硬盘sda └─sda1 8:1 0 465.8G 0 part /mnt/home #sda下的第一个分区sda1sdb 8:16 1 14.6G 0 disk #16G的启动盘├─sdb1 8:17 1 588M 0 part /runarchiso/bootmnt└─sda2 8:18 1 64M 0 partnvme0n1 259:0 0 119.2G 0 disk #119.2G固态硬盘nvme0n1 ├─nvme0n1p1 259:1 0 100G 0 part /mnt #nme0n1第一个分区nvme0n1p1└─nvme0n1p2 259:2 0 19.2G 0 part /mnt/boot/efi #nme0n1第二个分区nvme0n1p2 机械硬盘sda 固态硬盘nvme0n1 分区方案 BIOS with MBR 挂载点 分区 分区类型 建议大小 /mnt /dev/sda1 Linux 剩余空间 [SWAP] /dev/sda2 Linux swap More than 512 MiB UEFI with GPT 挂载点 分区 分区类型 建议大小 /mnt/boot /dev/sda1 EFI 系统分区 265–512 MiB /mnt /dev/sda2 Linux x86-64 root (/) 剩余空间 [SWAP] /dev/sda3 Linux swap More than 512 MiB 分区方案解读：如果你是以BIOS模式启动，你就无须创建和挂载/boot分区。 如果你是以UEFI模式启动，那你就必须创建和挂载/boot分区 开始分区 在那之前，建议你先了解一下以下分区的作用 12345//home/bootswap 使用cfdisk分区 BIOS选dos，UEFI的选gpt 以下的/dev/sdx字段都代表你的硬盘路径，请根据自身情况修改 12cfdisk /dev/sdx 通过左右方向键可以选择下面的选项，选择New然后回车 先新建/分区 输入大小然后回车即可创建分区 第一个/dev/sda1就是我们刚刚创建成功的分区 Free space 就是剩余的空间 新建/home分区 需要先把光标移到剩余空间，再新建哦！ 新建/boot分区（BIOS启动的不需要） 不需要太大，256M-512M就可以了 注意：/boot分区的建立方式还多一个步骤 选中新建的/boot分区，下面的光标移到Type选项 然后选中EFI System回车即可 新建swap分区 大小一般等于你的运行内存大小 也是和/boot分区差不多，要选择type 选中Linux swap然后回车即可 确认分区光标移动到write然后回车 输入yes回车确认 选中Quit，回车即可退出cfdisk 查看分区用lsblk即可，可以看到sda硬盘被分成了4个分区，正是我们刚才分的区 sda1 是我的/分区 sda2 是我的/home分区 sda3 是我的/boot分区 sda4 是我的swap分区 12lsblk 格式化分区当分区建立好了，这些分区都需要使用适当的文件系统进行格式化 注意：请根据自己的分区情况进行对应的格式化，例如我刚刚把sda1作为我的/分区且大小为14G /12mkfs.ext4 /dev/sda1 /home12mkfs.ext4 /dev/sda2 /boot（BIOS启动的不需要）12mkfs.fat -F32 /dev/sda3 swap123mkswap /dev/sda4swapon /dev/sda4 挂载分区/将/分区挂载到/mnt 12mount /dev/sda1 /mnt /home/mnt下创建/home文件 12mkdir /mnt/home 挂载/home分区 12mount /dev/sda2 /mnt/home /boot（BIOS启动的不需要）/mnt下创建/boot 12mkdir /mnt/boot 挂载引导分区 12mount /dev/sda3 /mnt/boot 更换镜像源12vim /etc/pacman.d/mirrorlist 按下/键，输入China，进入检索模式，搜到China的字样后回车,蓝色的光标就会出现在China的下面 但是目前显示的这个源我不太想要，按下n键可以跳到下一个China源，正好是我要的清华镜像源 为什么不用科大镜像源？ 答：因为不知道是什么原因，每次我安装arch的时候用科大的源会出现连接不到的问题，你也可以找科大的源使用。 然后按下2dd剪切，按下gg回到顶部，按下p粘贴 建议在清华源的下面再加上一条阿里源，以防安装软件的时候出错 12Server = http://mirrors.aliyun.com/archlinux/$repo/os/$arch 按i进入编辑模式然后输入，按ESC退出编辑模式 按下：(也就是Shift + ;)，然后输入wq回车，即可保存退出 安装基础软件包base 软件包并没有包含全部 live 环境中的程序，packages.x86_64 页面包含了它们的差异。需要额外安装： 管理所用文件系统 的用户工具 访问 RAID 或 LVM 分区的工具 未包含在 linux-firmware 中的额外固件 联网需要的程序 文本编辑器, 访问 man 和 info 页面的工具： man-db, man-pages 和 texinfo. 如果你还想安装其他软件包组比如 base-devel，请将他们的名字添加到 pacstrap 后，并用空格隔开。你也可以在 #Chroot 之后使用 pacman 手动安装软件包或组。 如果你看不懂上面在说什么，那你跟着我运行下面的命令就行了 12pacstrap /mnt base linux linux-firmware base-devel vi vim nano dhcpcd 配置系统Fstab 用以下命令生成 fstab 文件 (用 -U 或 -L 选项设置UUID 或卷标)： 12genfstab -U /mnt &gt;&gt; /mnt/etc/fstab Change root 到新安装的系统： 12arch-chroot /mnt 设置时区123ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtimehwclock --systohc 本地化设置 /etc/locale.gen 是一个仅包含注释文档的文本文件。指定您需要的本地化类型，只需移除对应行前面的注释符号（＃）即可，建议选择带 UTF-8 的项： 1234vim /etc/locale.genen_US.UTF-8 UTF-8zh_CN.UTF-8 UTF-8 接着执行 locale-gen 以生成 locale 讯息： 12locale-gen 将 LANG=en_US.UTF-8 加入 /etc/locale.conf 12vim /etc/locale.conf 设置主机名 xxxxs是你的主机名（自己取个喜欢的名字） 12echo &quot;xxxx&quot; &gt;&gt; /etc/hostname 编辑 /etc/hosts文件，添加以下内容（xxxx为你的主机名） 12345vim /etc/hosts127.0.0.1 localhost.localdomain localhost::1 localhost.localdomain localhost127.0.1.1 xxxx.localdomain xxxx 设置root密码 使用passwd命令为root用户增加密码 12passwd 安装Intel-ucode（非Inter C PU不需要）12pacman -S intel-ucode 如果你的下载出错，可能是网络断开了，那就再连接一次网络即可 安装引导 如果你硬盘上还有别的系统，需要安装 os-prober。如果你的系统在别的硬盘单独引导，则不需要。 12pacman -S os-prober 对于 BIOS 系统： 1234pacman -S grubgrub-install --target=i386-pc /dev/sdX # sdX 为你的安装硬盘grub-mkconfig -o /boot/grub/grub.cfg 对于 UEFI 系统： 1234pacman -S grub efibootmgrgrub-install --target=x86_64-efi --efi-directory=/boot --bootloader-id=GRUBgrub-mkconfig -o /boot/grub/grub.cfg 安装网络连接组件这里我提供两种方案，选一个就行(例如我：无线网络组件) 无线网络组件： 1pacman -S iw wpa_supplicant dialog netctl #无线网络 后面重启系统后可以使用wifi-menu命令连网 有线网络组件： 注意：笔记本用户千万别手欠，觉得自己笔记本也有网线插口就执行以下命令，否则系统安装好，DNS也会无法解析，除非你真的是使用网线方式连的网络 12systemctl enable dhcpcd #进入系统自动连网systemctl start dhcpcd #重启后执行此命令启动网络服务 重启系统到这里就安装完毕了 123exitumount -R /mntreboot 恭喜你已经安装完了系统，下一篇是安装桌面的指导","categories":[{"name":"archlinux","slug":"archlinux","permalink":"https://laijiahao.cn/categories/archlinux/"},{"name":"linux","slug":"archlinux/linux","permalink":"https://laijiahao.cn/categories/archlinux/linux/"}],"tags":[{"name":"archlinux","slug":"archlinux","permalink":"https://laijiahao.cn/tags/archlinux/"},{"name":"linux","slug":"linux","permalink":"https://laijiahao.cn/tags/linux/"}]},{"title":"关于常见进制的转换","slug":"binary","date":"2020-03-23T13:38:25.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/binary/","link":"","permalink":"https://laijiahao.cn/2020/03/23/binary/","excerpt":"了解进制之间是如何进行转换的","text":"了解进制之间是如何进行转换的 二进制二进制是逢二进一 第一行和第二行相加 1 0 1 1 1 1 1 1 1 1 0 1 0 二进制转为十进制我们把右边当作低位,左边是高位. 举个例子: 3 2 1 0 位数 1 0 1 0 二进制数 2^3^ 0 2^1^ 0 = 10 点拨: 可以看到3210是固定组,往左越来越大,我们从右往左看,二进制数只有0和1,当数字为0时代表没有则为0,如果数字是1,我们就要考虑当前位置对于的位数是多少,例如: 从右往左的第二个数字就是1,而当前位数是1,所以就是2的1次方.最后把所有转换的数字加起来即可. 总结: 位数 = n,遇到1考虑n,2的n次方 上面的例子有个特点就是8,4,2,1这是所有二进制数转十进制通用的 1110 = 14 (8+4+2+0) 1010 = 10 (8+0+2+0) 0001 = 1 (0+0+0+1) 八进制八进制就是逢8进1 第一行和第二行相加 7 0 1 1 1 2 1 5 1 0 2 2 6 八进制转十进制 3 2 1 0 位数 1 0 0 1 八进制数 8^3^ 0 0 8^0^ = 513 上面是个简单的例子,下面进阶一下 3 2 1 0 位数 3 0 0 5 八进制数 3*8^3^ 0 0 5*8^0^ = 1541 总结: 原数 * 8的n次方(位数=n) 十六进制十六进制就是逢十六进一 f 9 9 1 1 2 9 c 1 0 c 2 d 因为我们要把数字转为十六进制,所以大于等于10的数字我们用字母代替 A为10,B为11以此类推 十六进制转十进制 3 2 1 0 位数 1 0 0 1 十六进制数 16^3^ 0 0 16 = 4097 3 2 1 0 位数 0 2 4 0 十六进制数 0 2*16^2^ 4*16^1^ 0 = 576 总结: 原数 * 16的n次方(位数=n) 十进制转X进制二进制将要转换的数字直接除二,最后商为0为止 要转换的数字 商 余数 56 28 0 28 14 0 14 7 0 7 3 1 3 1 1 1 0 1 所以56的二进制是111000(从下往上排列) 八进制 要转换的数字 商 余数 99 12 3 12 1 4 1 0 1 所以99的八进制是143(从下往上排列) 十六进制 要转换的数字 商 余数 498 31 2 31 1 15 1 0 1 所以498的十六进制是1f2(从下往上排列) 二进制,八进制,十六进制之间的转换二进制和八进制 八进制的1位对应二进制的3位 二进制&gt;&gt;八进制10111101010101010010101 我们把这个二进制数字进行分组,每组3位 可以分为 010 111 101 010 101 010 010 101 然后按照二进制规律转换 分别对应2 7 5 2 5 2 2 5 这个数字就是八进制数 八进制&gt;&gt;二进制1 2 4 5 6 7 直接把每位数字对应的数进行转换,使用二进制规律8,4,2,1 分别对应,也是从右往左 001 010 100 101 110 111 二进制和十六进制二进制&gt;&gt;十六进制 十六进制的1位对应二进制的4位 010111101010101010010101 我们把这个二进制数字进行分组,每组4位 可以分为 0101 1110 1010 1010 1001 0101 然后按照二进制规律转换 分别对应5 e a a 9 5 十六进制&gt;&gt;二进制9 a 8 f 7 直接把每位数字对应的数进行转换,使用二进制规律8,4,2,1 分别对应,也是从右往左 1001 1010 1000 1111 0111 扩展八进制和十六进制我们要把欲转换的数字转换为二进制,然后再进行转换 八进制&gt;&gt;十六进制37231 转为二进制 11111010011001 转为十六进制,分组每组4位 0011 1110 1001 1001 对应的数为3 e 9 9 十六进制&gt;&gt;八进制8fc6 转为二进制 1000111111000110 转为八进制,分3组每组3位 001 000 111 111 000 110 对应的数为:1 0 7 7 0 6","categories":[{"name":"编程","slug":"编程","permalink":"https://laijiahao.cn/categories/%E7%BC%96%E7%A8%8B/"}],"tags":[{"name":"进制","slug":"进制","permalink":"https://laijiahao.cn/tags/%E8%BF%9B%E5%88%B6/"}]},{"title":"【pic+js+gh】免费高速图床方案","slug":"picgo","date":"2020-03-23T13:37:23.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/picgo/","link":"","permalink":"https://laijiahao.cn/2020/03/23/picgo/","excerpt":"搭建一个自己的免费图床工具","text":"搭建一个自己的免费图床工具 本文用到的工具或网站PicGo jsdelivr github 速度对比Github的速度： jsdelivrCDN的速度： 下载PicGo首先进入PicGo的下载地址 选择最新版本下载，根据自己的系统下载对应的安装包，我这里是Windows 如果你下载的时候很慢，可以用特殊的方式下载，也可以用我的快速链接 https://www.lanzous.com/i5avbgd //2.1.2Windows版本 配置PicGo创建仓库首先创建一个github仓库，名字可以随便取，然后勾选README初始化仓库 生成token【进入github】-【点击头像】-【settings】-【developer settings】-【Personal access tokens】 点击【Generate new token】 自定义一个名字，然后勾选【repo】最后点绿色按钮创建即可 请复制你的token，它只显示一次，请妥善保管 配置github图床先打开你安装好的picgo然后左栏依次选择【图床设置】-【github图床】 1如果你打开picgo时没有直接出来界面，它可能藏在你的托盘图标处 仓库名格式是你的用户名/仓库名 分支是master token填我们刚刚生成的 存储路径可以填也可以不填，如果你填了img/，它就会上传到你仓库的img目录下 自定义域名的格式：https://cdn.jsdelivr.net/gh/用户名/仓库名 最后记得确定保存 上传图片点击上传区记得图床选【github图床】 直接将图片拖入即可上传 可以看到在你的仓库有了第一张图片，我上传了一个为1.png的图片 配合jsdelivr使用 链接格式：https://cdn.jsdelivr.net/gh/你的用户名/仓库名/文件路径 例如：https://cdn.jsdelivr.net/gh/kjhuanhao/testcdn/1.png 我们在上传的时候会自动复制这个格式的链接，大家可以可以直接复制查看 然后你就可以通过这个链接访问你的图片了","categories":[],"tags":[]},{"title":"manajro-i3wm","slug":"manjaro-i3","date":"2020-03-23T13:35:11.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/manjaro-i3/","link":"","permalink":"https://laijiahao.cn/2020/03/23/manjaro-i3/","excerpt":"这本来是我的一个视频稿子，但是忽然不想去做了，就放出这个稿子","text":"这本来是我的一个视频稿子，但是忽然不想去做了，就放出这个稿子 介绍这是一期关于manjaro的安装到开发环境配置i3wm的教程.我即将在manjaro_gnome里面演示 主要的软件或者工具 i3wm tmux nvim polybar compton ranger rofi fish alacritty 展示我的桌面 你需要做的备份好你自己的文件,开始和我一起安装和配置一个美观实用的开发环境 安装篇Windwos下制作一个启动盘 事前准备需要一个至少4G以上的U盘1.下载rufus2.使用DD写入即可3.重启电脑启动U盘Linux下制作一个启动盘 123sudo fdisk -l #查看U盘路径sudo umount /dev/sdb* #取消挂载U盘sudo mkfs.vfat /dev/sdb -I #格式化U盘 然后用dd命令 1sudo dd if=镜像路径 of=/dev/sdb(启动盘) #写入镜像 分区 挂载点/；主分区；安装系统和软件；分区格式为ext4； 挂载点/home；逻辑分区；相当于“我的文档”； 分区格式ext4 swap；逻辑分区；充当虚拟内存；大小可以等于内存大小；分区格式为swap /boot ；引导分区；逻辑分区；；分区格式为ext4； 建议第一次装linux的新手去百度了解一下 安装后的第一件事情 几乎所有linux你安装完成之后,我们都要进行更换镜像源的操作 1sudo pacman-mirrors -i -c China -m rank # 选ustc科大镜像源 然后进行更新 12sudo pacman -Syysudo pacman -Syyu 在/etc/pacman.conf加入 123[archlinuxcn]SigLevel = Optional TrustedOnlyServer = https://mirrors.ustc.edu.cn/archlinuxcn/$arch 导入秘钥 12sudo pacman -Syysudo pacman -S archlinuxcn-keyring pacman相关的命令pacman用法和介绍: https://wiki.archlinux.org/index.php/Pacman pacman视频介绍(来自TheCW): https://www.bilibili.com/video/av55190132 其他问题和建议 如果你系统用的是中文,你还需要安装一个字体,避免中文乱码 1sudo pacman -S wqy-microhei 新手建议 解决问题大法: 遇到软件使用问题看archwiki archwiki没有找到,没有关系 再看github的,对应仓库wiki 没有找到,没有关系 看看issues,有没有相同问题 遇到ERROR,不要着急 先查百度,或者bing 就算谷歌,也没有关系 仍未解决,切莫放弃 发个problem,who can help me 知乎,贴吧,群里也发 csdn也能考虑 提问之前必须think 提问的智慧要牢记 许多途径切勿放弃! archwiki: https://wiki.archlinux.org/ archwiki(中文): https://wiki.archlinux.org/index.php/Arch_Linux_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87) 提问的智慧:http://doc.zengrong.net/smart-questions/cn.html 遇到找不到的软件包看AUR,这是一个庞大的软件库 aur:https://aur.archlinux.org/ 配置篇安装fish 安装fish https://fishshell.com/ 1sudo pacman -S fish 查看fish位置 更换fish chsh -s 安装oh-my-fish插件 12curl -L https://get.oh-my.fish | fish 配置fish主题 安装i3i3是一个窗口管理器,可以高效管理你的桌面,管理你的窗口,窗口直接可以快速地切换,再配合一些小工具,除了浏览网页之类的,几乎是用不到鼠标,可以大大增加了你的工作效率 那么如何去安装和使用i3呢?在这之前我来带你安装一下linux 想要高效就先拥有一个好用的系统,例如archlinux,或者arch的发行版,衍生版 arch下的aur我觉得几乎是万能的,我从来没有遇过什么软件包不存在这种问题 我这里就演示如何安装manjaro 12sudo pacman -S i3 重启 选择i3 安装rofirofi 12sudo pacman -S rofi clone 我的仓库dotfiles https://github.com/kjhuanhao/dotfiles.git 移动配置文件到 ~目录下 安装依赖建议手动安装,因为脚本是一键式,容易出现部分没有安装问题,不容易差错 安装tmux和alacritytmux是一个终端复用器,类似GNU Screen Alacritty是一个终端模拟器 12sudo pacman -S tmux alacritty 移动tmux和alacrity的配置文件 tmux移动到~ 的.tmux.conf下 移动主题文件到~下 安装polyabr12sudo pacman -S polybar 移动polyabr配置文件 如果是虚拟机你无法使用我的的polybar配置,只能使用默认的 可以去看看默认的配置在哪,记得生成laught 安装nvim12sudo pacman -S neovim 移动i3配置文件 复制 到.config/i3下修改分辨率加上virual1 重载i3 安装compton12sudo pacman -S compton 建议去github看官方的安装方式,如果报错那就是缺少依赖 关于切换键位布局在我的配置文件里面有一份colemak的键位布局 其他推荐UP主:TheCW","categories":[{"name":"i3wm","slug":"i3wm","permalink":"https://laijiahao.cn/categories/i3wm/"}],"tags":[{"name":"manjaro","slug":"manjaro","permalink":"https://laijiahao.cn/tags/manjaro/"},{"name":"i3wm","slug":"i3wm","permalink":"https://laijiahao.cn/tags/i3wm/"}]},{"title":"【教程向】配置属于自己的vim","slug":"configvim","date":"2020-03-23T13:33:31.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/configvim/","link":"","permalink":"https://laijiahao.cn/2020/03/23/configvim/","excerpt":"拥有一个自己的vim配置","text":"拥有一个自己的vim配置 新建Vim配置文件Linux 1mkdir ～/.vimrc 配置常用设置 配置 功能 set number 设置行号 set systax on 高亮 colorscheme{主题} 设置颜色主题 set hlsearch 高亮搜索 set foldmethod=indent 设置折叠方式 映射 map&lt; 预设 &gt; 命令 nmap vmap imap *noremap非递归映射 配置 功能 let mapleader=’，’ 设置leader建 let inoremap &lt; leader &gt;w &lt; Esc &gt;:w&lt; cr &gt; 退出insert保存文件 imap &lt; c-d &gt; &lt; Esc &gt;ddi 在insert下删除一行 插件搜索： https://vimawesome.com/ 我的配置 https://github.com/kjhuanhao/nvim","categories":[{"name":"vim","slug":"vim","permalink":"https://laijiahao.cn/categories/vim/"}],"tags":[{"name":"vim","slug":"vim","permalink":"https://laijiahao.cn/tags/vim/"}]},{"title":"【最简单的vim教程】vim学习笔记-基础操作","slug":"learnvim","date":"2020-03-23T13:31:57.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/learnvim/","link":"","permalink":"https://laijiahao.cn/2020/03/23/learnvim/","excerpt":"Vim基础操作","text":"Vim基础操作 说明 C-字母 = Ctrl + 字母 char = 任意字符 开始编辑insert 按键 功能 说明 i（I） insert 当前位置插入（当前行前） a（A） append 当前字符后面插入（当前行后） o（O） open a line below 当前行的下面（当前行上面） 模式 模式 功能 说明 普通模式（ESC） normal 操作和移动 插入模式（i，a，o） insert 编辑 命令模式（：） command 执行命令 可视模式（v，V，C-v） visual 选择 可视模式visual 按键 说明 v 选中字符 V 选中当前行 C-v 方块选择 插入模式技巧insert 按键 功能 说明 C-h 删除 上一个字符 C-w 删除 当前单词 C-u 删除 当前行（终端可使用） C-a 移动到开头 终端 C-e 移动到结尾 终端 切换insert和normal模式 按键 功能 说明 C-[ 切换到normal 代替ESC C-c 切换到normal 代替ESC gi 跳转到上一次编辑的位置操作 普通模式normal 快速移动 按键 功能 说明 hjkl 移动 上下左右 w（W） 移动 下一个单词开头 e（E） 移动 下一个单词结尾 b（B） 移动 上一个单词开头 大写以空白格为分隔符 行间搜索移动 按键 功能 说明 f{char}（F） 跳转 跳转到char上（往前搜） t{char} 跳转 跳转到char前一个字符 ; or , 继续 继续查找 水平移动 按键 功能 说明 0 移动 移动到行首 $ 移动 移动到行尾 页面移动 按键 功能 说明 gg 移动 文件开头 G 移动 文件结尾 C-o 移动 快速返回上一位置 H/M/L 移动 屏幕开头/中间/尾 C-u 翻页 上 C-f 翻页 下 zz 翻页 中间 删除命令 按键 功能 说明 {number}x 删除 删除一个字符 diw delete 删除一个单词（不删除空格） dw 删除word 删除一个单词 {number}dd 删除 删除当前行 dt{符号} 删除 删除符号之间的内容 d 删除 直接删除选中部分 快速修改 按键 功能 说明 r（R） 替换 替换一个字符（替换后面一个字符） c{任意命令} 改变 删除然后进入i caw 改变 删除并改变一个单词 s（S） 替换 删除当前字符，然后进入i（删除整行） u 回退 撤销 C-r 回退 前进 查询 按键 功能 说明 / or ？ 查询 n or N 移动 下 /上 * / # 移动 前 / 后 Text Object[ number ]&lt; command &gt;[ text object ] 按键 功能 viw 选中一个单词 vaw 选中一个单词（周围） caw 修改一个单词 ci+符号 删除符号内的内容 … 寄存器复制粘贴normal 按键 功能 y（yy） 复制（复制一行） p 粘贴 ” + y 复制到系统剪切板 insert 按键 功能 C-v 粘贴 宏 按键 功能 q{char} 录制宏，并存在a中 q 结束录制宏 ：normal @{char} 批量恢复录制 @{char} 恢复录制 示例： []中间为示例操作流程 q{char} [ I{char}当前行前加入char （例子） A{char}当前行后加入char（例子） ] q 结束录制 恢复录制@a 行选需要操作的文本 ：normal @a","categories":[{"name":"vim","slug":"vim","permalink":"https://laijiahao.cn/categories/vim/"}],"tags":[{"name":"vim","slug":"vim","permalink":"https://laijiahao.cn/tags/vim/"}]},{"title":"【快速上手】Git的使用","slug":"usegit","date":"2020-03-23T13:30:10.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/usegit/","link":"","permalink":"https://laijiahao.cn/2020/03/23/usegit/","excerpt":"让你快速上手Git","text":"让你快速上手Git 创建Git仓库1git init 查看当前仓库情况1git status 添加修改1git add (file) or git add . 查看未提交的修改1git diff 撤销提交操作1git reset 提交自己的身份12git config --global user.name &quot;xxx&quot;git config --global user.email &quot;xxx@xxx.com&quot; 向git提交内容1git commit -m &quot;&quot; 将本地仓库变为远程仓库1git remote add origin (adress) 忽略提交文件1touch .gitignore and add files to .gitignore 不再追踪某个文件1git rm --cached (file) 添加分支1git branch (name) 切换分支1git checkout (name) 合并分支1git merge (name) 列出本地分支1git branch -a 删除分支1git branch -d (name) or -D(Mandatory deletion) 设置本地分支追踪远程分支1git push --set-upstream","categories":[{"name":"git","slug":"git","permalink":"https://laijiahao.cn/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://laijiahao.cn/tags/git/"}]},{"title":"git秘钥生成","slug":"gitssh","date":"2020-03-23T13:28:15.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/gitssh/","link":"","permalink":"https://laijiahao.cn/2020/03/23/gitssh/","excerpt":"前言git使用https协议，每次pull,push都要输入密码，使用git协议，使用ssh秘钥，可以省去每次输密码 大概需要三个步骤： 一、本地生成密钥对； 二、设置github上的公钥； 三、修改git的remote url为git协议。","text":"前言git使用https协议，每次pull,push都要输入密码，使用git协议，使用ssh秘钥，可以省去每次输密码 大概需要三个步骤： 一、本地生成密钥对； 二、设置github上的公钥； 三、修改git的remote url为git协议。 生成密钥1234567891011$ ssh-keygen -t rsa -C “your_email@youremail.com“ Creates a new ssh key using the provided email # Generating public/private rsa key pair. Enter file in which to save the key (/home/you/.ssh/id_rsa): 直接Enter就行。然后，会提示你输入密码，如下(建议输一个，安全一点，当然不输也行)： Enter passphrase (empty for no passphrase): [Type a passphrase] Enter same passphrase again: [Type passphrase again] 然后会提示你,你的密钥在哪 123456Your identification has been saved in /home/you/.ssh/id_rsa. Your public key has been saved in /home/you/.ssh/id_rsa.pub. The key fingerprint is: # 01:0f:f4:3b:ca:85:d6:17:a1:7d:f0:68:9d:f0:a2:db your_email@youremail.com] 添加公钥到你的github帐户1.复制密钥 12$ cat ~/.ssh/id_rsa.pub 如果你是windows用户,那么请在你的用户目录下,找到.ssh文件夹然后打开id_rsa.pub直接复制就可以了 2、登陆你的github帐户。然后 Account Settings -&gt; 左栏点击 SSH Keys -&gt; 点击 Add SSH key 3、然后你复制上面的公钥内容，粘贴进“Key”文本域内。 title域，你随便填一个都行。 4、完了，点击 Add key。 这样，就OK了。然后，验证下这个key是不是正常工作。 1$ ssh -T git@github.com 会提示你: 1Hi username! You’ve successfully authenticated, but GitHub does not # provide shell access. 这就大功告成!","categories":[{"name":"git","slug":"git","permalink":"https://laijiahao.cn/categories/git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://laijiahao.cn/tags/git/"},{"name":"gitssh","slug":"gitssh","permalink":"https://laijiahao.cn/tags/gitssh/"}]},{"title":"wordpress博客搭建","slug":"wordpress","date":"2020-03-23T13:26:29.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/wordpress/","link":"","permalink":"https://laijiahao.cn/2020/03/23/wordpress/","excerpt":"你好！本网站教程是利用虚拟主机搭建Wordpress个人网站","text":"你好！本网站教程是利用虚拟主机搭建Wordpress个人网站 前言不管您是接触过搭建网站还是没接触过的，只要跟着我的教程就可以成功搭建 WordPress官网：https://cn.wordpress.org/ 购买一个虚拟主机我推荐以下几个网址(CNY是人民币) 阿里云：https://www.aliyun.com/ //最便宜一年187CNY 腾讯云：https://cloud.tencent.com/ 硅云：https://www.vpsor.cn/aff?affid=46649 //最便宜的是一个月8CNY，建议在硅云买！！！ 西部数码：https://www.west.cn/ 亿速互联：http://www.ysiis.com/ //建议买独立ip一年118CNY PS：如果只是用来写写东西，做个小网站宣传自己什么的，用便宜的主机就可以了，建议在硅云和亿速互联买香港虚拟主机 如果你是商业用途，例如公司之类的建议在阿里云和腾讯云买 1购买国内的主机是需要公安局备案的，如果是购买香港或者美国等虚拟主机，无需备案也无需实名认证 数据库MySQLPS：如果你是在亿速互联或者硅云买的话是送数据库的，这样就省去买数据库的烦恼了，其他的我不了解，请自行体验 建议是用赠送数据库的网站，不然就自己去购买或者搭建本地数据库 购买一个域名和解析域名购买域名你可以用上面的推荐网址购买域名 阿里云：https://www.aliyun.com/ //需要实名认证 腾讯云：https://cloud.tencent.com/ //.xyz新用户只要9CNY/需要实名认证 硅云：https://www.vpsor.cn/ //可以说是我见过最便宜的域名网站/需要实名认证 西部数码：https://www.west.cn/ //需要实名认证 亿速互联：http://www.ysiis.com/ //这个也便宜/需要实名认证 新网：http://www.xinnet.com/ //这个厉害了，完成实名认证，域名免费送 Freenom：https://www.freenom.com/ //国外域名网站，无需实名认证，免费12个月 Namesilo：https://www.namesilo.com/ //国外域名网站，无需实名认证，优惠码：okoff 或者 go2think PS：这些网站的域名都很便宜，随便挑选 建议硅云： img 解析域名拥有了自己的虚拟主机和域名之后我们需要解析域名，通俗来说就是让这个域名地址可以访问你的网站 1在解析域名之前，如果你是用国内网站买的域名你需要过户或者实名认证，否则无法访问你的网站 打开域名的控制面板 点击解析 添加记录 img 主机记录：www和@ 记录类型：A记录 记录值：填写你虚拟主机的ip地址 //虚拟主机控制面板可以查看，不知道的话问客服 优先级：若虚拟主机无要求就默认 线路类型：若虚拟主机无要求就默认 TTL：若虚拟主机无要求就默认 我们要添加两个解析，www和@，和我上图一样就可以了 虚拟机域名绑定打开虚拟机控制面板 找到绑定域名的入口 img 输入你的域名地址 格式：www + 你的域名地址 点击绑定即可 下载WordPress文件 官网最新版下载地址：https://cn.wordpress.org/download/ 5.0.3百度云下载地址： https://pan.baidu.com/s/1fLDzge_Z4hXXhTTs4Iu_AA 提取码: iqgr 5.0.3高速下载地址：https://www.lanzous.com/i3iquna //网速慢的伙伴可以选择此链接 上传WordPress文件到虚拟主机不同的网站虚拟主机的文件上传方式都不一样，但通用的都是用FTP文件传输 如果你所购买的主机支持在线FTP那你可以直接用在线上传 上传方式一：FTP上传我们需要用到一个软件“Filezilla” 下载地址：https://www.filezilla.cn/ 下载后打开软件，我们需要输入以下信息,这些信息都可以在虚拟主机信息或者控制面板查找 如果你不清楚，可以询问网站的客服 不同的网站主机上传文件的方式不同，有的是需要上传到固定文件夹的，我们可以在网站里面找一下，例如我的是需要上传到web目录下 img 如果右边的站点出现文件夹代表链接成功，软件也会提示的 img 把左边的文件拖到右边就会自动上传了，我们需要将WordPress目录下的所有文件都上传到主机 1注意：不同的网站主机上传文件的方式不同，有的是需要上传到固定文件夹的，在上传之前一定要看主机上传文件说明，这个说明一般网站都会有，可能在问题中心里面 上传方式二：在线FTP我们需要进入主机的控制面板，找到类似可以管理虚拟文件的入口，比如在线FTP 不同的网站主机上传文件的方式不同，有的是需要上传到固定文件夹的，我们可以在网站里面找一下，例如我的是需要上传到web目录下 img 先上传WordPress文件的压缩包，上传之后选择在线解压解压到当前目录即可 1注意：不同的网站主机上传文件的方式不同，有的是需要上传到固定文件夹的，在上传之前一定要看主机上传文件说明，这个说明一般网站都会有，可能在问题中心里面 安装WordPress输入MySQL数据库信息现在你可以打开你的网站地址，会自动跳转到配置界面，如果没有自动跳转请打开下面的网址 你的网站地址 + /wp-admin/install.php //如果还是没有，你需要检查域名解析是否成功，然后检查文件是否正确上传到虚拟主机的指定目录 你会进入这个界面 img 你需要到虚拟主机赠送的数据库查看图片中的信息，数据库名、用户名、密码等 如果你购买的虚拟主机没有赠送数据库，那你就要去买一个或者自己搭建本地数据库（不提供搭建本地数据库教程） 点击开始 img 请按照你的数据库信息填写 点击提交 img 配置网站信息点击安装 img 此刻你需要输入你的网站信息，可以自定义 1注意保存好你的密码 点击安装WordPress img 恭喜你！出现这个界面代表搭建成功 访问网站访问自己的网站就会是这个界面了 img 这个界面是不是不好看，我们辛辛苦苦搭建的WordPress居然是这样的，我告诉你其实我们可以用主题美化 美化WordPress网站下载主题推荐两个主题下载地址 WordPress官网：https://cn.wordpress.org/themes/ //官网所有主题都在这了 Kratos-pjax：https://www.fczbl.vip/ //一个二次元主题 你也可以自行百度或者谷歌一下其他好看的主题 安装主题我们要进入这个网址 你的网址地址 + /wp-admin 这个就是你网站的管理界面，也就是后端 然后你会看到这个登入 img 这个就是我们在安装WordPress的时候，配置的用户名和密码 输入然后点击登入就可以了 这个就是我们的后台界面 img 有个最新版本建议不要更新，因为最新版本是英文的 我们点击右边的外观 点击添加 img 然后我们上传下载好的主题压缩包，点击上传主题 img 选择文件，点击安装 img PS：在添加主题这里，下面有官网提供的一些主题大家可也以选择安装，而且这是在线安装的很简单 我们可以查看左下角有进度条 img 上传成功显示如图： img 我们需要点击启用，让主题生效 img 免费主题下载地址：http://www.2zzt.com/ 主题进阶设置发现主题不能随心所欲怎么办，我教你为所… 咳咳！在外观下有个主题设置，进去就可以随心设置了 img 可以通过访问自己网址，看看是否生效（每次设置都要点保存哦！） img 我已经不再是那个白白的界面了","categories":[{"name":"搭建网站","slug":"搭建网站","permalink":"https://laijiahao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"WordPress","slug":"WordPress","permalink":"https://laijiahao.cn/tags/WordPress/"},{"name":"博客","slug":"博客","permalink":"https://laijiahao.cn/tags/%E5%8D%9A%E5%AE%A2/"}]},{"title":"【自己的下载平台】搭建aria2网站","slug":"aria2","date":"2020-03-23T13:21:59.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/aria2/","link":"","permalink":"https://laijiahao.cn/2020/03/23/aria2/","excerpt":"本文章将带你搭建一个自己的服务器下载平台:aria2","text":"本文章将带你搭建一个自己的服务器下载平台:aria2 前言本文章将带你搭建一个自己的服务器下载平台:aria2,它的用途是什么? 下载用途 百度网盘 普通文件 迅雷种子 等等 准备工具 服务器连接软件xshell或者putty 一台服务器 安装宝塔面板请大家按照这个网站的https://moecat.cn/教程来安装宝塔面板,然后再回到教程 我这里用的是centos7服务器,如果你也是的话,直接跟着我安装宝塔面板就可以了 Bt_Panel_Pro 脚本（Centos): 1yum -y install wget;wget http://download.umaru.uk/Bt_Panel_Pro &amp;&amp; sh Bt_Panel_Pro 安装完成后,会给你宝塔面板的初始账号和秘密以及访问地址,请拿一个小本本记下来 讲解: 第一行的是你的访问链接 第二行是你的用户名 第三行是你的密码 Bt_Panel 脚本（升级开心版）： 1curl https://download.btpanel.net/install/update6.sh|bash 现在你就可以去登入你的宝塔面板了,只需要访问你的访问链接 相关插件安装进入软件商店 你只需要安装一个插件: Nginx 添加站点安装完插件后,请在左边的菜单栏,找到网站,然后点击添加站点,输入你的域名后点击提交即可 我们本次搭建的网站是纯静态的,所以其他的不需要选择 提示:请解析你的域名先哦! 记住你的根目录文件在哪哦! 然后点击设置,在域名管理中添加一个www.你的域名 下载网站源码(前端)github项目:https://github.com/ziahamza/webui-aria2 进入你的根目录,就是刚刚创建站点时的目录 一般的格式是/www/wwwroot/你的域名 点击远程下载,输入以下链接: https://github.com/ziahamza/webui-aria2/archive/master.zip 下载完成后,请解压文件,然后进入解压后的文件 全选文件,然后点击剪切 我们回到上一级目录,也就是你的/www/wwwroot/你的域名目录下 然后点击粘贴所有 我们现在进入docs文件目录 还是刚刚的操作,全选文件,点击剪切,然后粘贴所有到上一级目录 服务器下载aria2(后端)连接你的服务器,然后先来更新一下 centos: 1yum -y update ubuntu 1sudo apt update 更新完成之后,安装aria2 centos 1yum -y install aria2 ubuntu 1sudo apt install aria2 启动后端执行: 1aria2c --enable-rpc --rpc-listen-all --rpc-secret password password是你的密码,你可以自定义 会提示你如下信息 请先不要关闭连接服务器的软件,否则会停止后端服务 后面我会讲如何后台运行 开放端口进入宝塔面板.左边的菜单栏找到安全 输入6800,然后点击放行 连接设置进入你的网站,一般会提示你认证失败,切莫着急,我们还需要配置一下 点设置然后点连接设置 我们只需要设置两个地方,一个是主机一个是密码令牌 主机可以填IP或者域名 密码令牌填写刚刚运行启动端口命令的时候,后面设置的密码 如果你没有注意到刚刚启动后端的密码设置,你就填password 其他的无需填写,然后保存设置 现在刷新一下你的网页,就不会提示你认证失败了 让后端命令在后台运行安装screen centos 1yum -y install screen ubuntu 12sudo apt install screen 然后执行 12screen 这时我们会进入screen的新窗口,我们运行启动后端的命令 12aria2c --enable-rpc --rpc-listen-all --rpc-secret password passwd是你的密码 运行之后按住Ctrl + a,再按d就会退出这个窗口,而且启动后端的命令会在后台运行 这时我们就算关闭了连接软件也不会断开后端服务 如何利用aria2下载百度云网盘文件我们需要下载一个插件,下载地址: https://github.com/acgotaku/BaiduExporter/archive/master.zip 下载后请解压, 找到BaiduExporter.crx,然后将这个插件安装在你的浏览器中 如果你使用的是谷歌浏览器,请下载这个 https://www.lanzous.com/i5nyu1i 解压后使用开发者模式安装","categories":[{"name":"搭建网站","slug":"搭建网站","permalink":"https://laijiahao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"aria2","slug":"aria2","permalink":"https://laijiahao.cn/tags/aria2/"},{"name":"web","slug":"web","permalink":"https://laijiahao.cn/tags/web/"}]},{"title":"h5ai服务器目录","slug":"h5ai","date":"2020-03-23T13:16:28.000Z","updated":"2020-05-09T22:09:33.000Z","comments":true,"path":"2020/03/23/h5ai/","link":"","permalink":"https://laijiahao.cn/2020/03/23/h5ai/","excerpt":"在前几天，我帮人安装h5ai这个东西，结果直接踩坑，装了一个下午，打算自己也装一个，顺便写一下教程最终效果演示： https://larsjung.de/h5ai/demo/","text":"在前几天，我帮人安装h5ai这个东西，结果直接踩坑，装了一个下午，打算自己也装一个，顺便写一下教程最终效果演示： https://larsjung.de/h5ai/demo/ 服务器服务器这里推荐在阿里云购买或者是Vultr 注意:如果阿里云国内服务器需要备案 购买Vultr更加方便哦!最低价格是5$一个月 注册链接:https://www.vultr.com/?ref=8120377-4F 此链接注册可获得50$体验卷(需要充值10$后才能使用) 域名推荐硅云:https://www.vpsor.cn/aff?affid=46649 新人购买域名.top和.xyz首年一元 (价格虽好,但请勿过度消费,我买了6个QAQ) 1.安装宝塔面板 为什么要安装宝塔面板呢? 答:我喜欢(主要是方便后期美化一下) 请先连接你的服务器(不连接咱们怎么安装?) 请大家按照这个网站的https://moecat.cn/教程来安装宝塔面板,然后再回到教程 我这里用的是centos7服务器,如果你也是的话,直接跟着我安装宝塔面板就可以了 Bt_Panel_Pro 脚本（Centos): yum -y install wget;wget http://download.umaru.uk/Bt_Panel_Pro &amp;&amp; sh Bt_Panel_Pro 1安装完成后,会给你宝塔面板的初始账号和秘密以及访问地址,请拿一个小本本记下来 讲解: 第一行的是你的访问链接 第二行是你的用户名 第三行是你的密码 Bt_Panel 脚本（升级开心版）： 停止支持 现在你就可以去登入你的宝塔面板了 相关插件安装进入软件商店 你需要安装以下插件: Nginx MySQL PHP 7.1或以上 phpMyAdmin 添加站点安装完插件后,请在左边的菜单栏,找到网站,然后点击添加站点,输入相关信息后点击提交即可 然后点击设置,在域名管理中添加一个www.你的域名 1PS:请记住数据库的用户名和密码,忘记密码可以在数据库中查看或重置 2.下载及解压h5ai文件在宝塔面板中左边找到文件 进入/www/wwwroot/你的域名这个文件夹下 然后点击远程下载 输入: https://release.larsjung.de/h5ai/h5ai-0.29.2.zip 然后解压文件 3.域名解析这里以硅云的域名控制台为例 添加WWW和@解析 记录类型都是A 记录值填你服务器的IP地址 4.安装依赖和配置PHP查看依赖信息在浏览器中访问 你的域名/_h5ai/public/index.php 默认密码是空的直接点击登入即可 左边已经是yes或者变成绿色的,证明对应的依赖已经安装成功 配置PHP在你的软件商店中找到你下载的PHP版本–进入设置–禁用函数 删除exec 和 passthru #Shell tar Shell zip Shell du就会显示成yes 安装Use EXIF thumbs然后点击安装扩展 安装imagemagick和exif #Use EXIF thumbs会显示成yes 现在还差两个,再次连接你的服务器 安装依赖安装PDF thumbs(convert)执行 1yum -y install ImageMagick 安装Movie thumbs(ffmpeg)#x86_64下载二进制文件wget https://www.moerats.com/usr/down/ffmpeg/ffmpeg-git-64bit-static.tar.xz#解压文件tar xvf ffmpeg-git-64bit-static.tar.xzrm -rf ffmpeg-git-64bit-static.tar.xz#将ffmpeg和ffprobe可执行文件移至/usr/bin方便系统直接调用mv ffmpeg-git-20180831-64bit-static/ffmpeg ffmpeg-git-20180831-64bit-static/ffprobe /usr/bin/#查看版本ffmpegffprobe | 出现错误的看这里: PS:如果在mv ffmpeg-git-20180831-64bit-static/ffmpeg ffmpeg-git-20180831-64bit-static/ffprobe /usr/bin/这条命令中如果你执行出现了错误,请cd到 / 目录,然后执行ls查看解压之后的文件夹 然后替换命令中的两个ffmpeg-git-20180831-64bit-static,改成你解压之后的文件夹即可 此时你的再访问/_h5ai/public/index.php全变成了yes,这就ok了 5.设置网站默认文档进入你的宝塔面板–进入网站点击设置–点击默认文档 在下面添加一个 /_h5ai/public/index.php 记得点击添加 这时候你可以直接访问你域名了,可以看到搭建成功 但是内容是空的,因为我们还没上传文件呢","categories":[{"name":"搭建网站","slug":"搭建网站","permalink":"https://laijiahao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"}],"tags":[{"name":"h5ai","slug":"h5ai","permalink":"https://laijiahao.cn/tags/h5ai/"}]}],"categories":[{"name":"转载","slug":"转载","permalink":"https://laijiahao.cn/categories/%E8%BD%AC%E8%BD%BD/"},{"name":"服务器","slug":"服务器","permalink":"https://laijiahao.cn/categories/%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"name":"arch","slug":"arch","permalink":"https://laijiahao.cn/categories/arch/"},{"name":"git","slug":"git","permalink":"https://laijiahao.cn/categories/git/"},{"name":"brew","slug":"brew","permalink":"https://laijiahao.cn/categories/brew/"},{"name":"picgo","slug":"picgo","permalink":"https://laijiahao.cn/categories/picgo/"},{"name":"netlify","slug":"netlify","permalink":"https://laijiahao.cn/categories/netlify/"},{"name":"valine","slug":"valine","permalink":"https://laijiahao.cn/categories/valine/"},{"name":"搭建网站","slug":"搭建网站","permalink":"https://laijiahao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/"},{"name":"hexo","slug":"搭建网站/hexo","permalink":"https://laijiahao.cn/categories/%E6%90%AD%E5%BB%BA%E7%BD%91%E7%AB%99/hexo/"},{"name":"picee","slug":"picee","permalink":"https://laijiahao.cn/categories/picee/"},{"name":"linux","slug":"linux","permalink":"https://laijiahao.cn/categories/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://laijiahao.cn/categories/archlinux/"},{"name":"linux","slug":"archlinux/linux","permalink":"https://laijiahao.cn/categories/archlinux/linux/"},{"name":"编程","slug":"编程","permalink":"https://laijiahao.cn/categories/%E7%BC%96%E7%A8%8B/"},{"name":"i3wm","slug":"i3wm","permalink":"https://laijiahao.cn/categories/i3wm/"},{"name":"vim","slug":"vim","permalink":"https://laijiahao.cn/categories/vim/"}],"tags":[{"name":"提问的智慧","slug":"提问的智慧","permalink":"https://laijiahao.cn/tags/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/"},{"name":"我的世界","slug":"我的世界","permalink":"https://laijiahao.cn/tags/%E6%88%91%E7%9A%84%E4%B8%96%E7%95%8C/"},{"name":"arch","slug":"arch","permalink":"https://laijiahao.cn/tags/arch/"},{"name":"git","slug":"git","permalink":"https://laijiahao.cn/tags/git/"},{"name":"brew","slug":"brew","permalink":"https://laijiahao.cn/tags/brew/"},{"name":"picgo","slug":"picgo","permalink":"https://laijiahao.cn/tags/picgo/"},{"name":"hexo","slug":"hexo","permalink":"https://laijiahao.cn/tags/hexo/"},{"name":"netlify","slug":"netlify","permalink":"https://laijiahao.cn/tags/netlify/"},{"name":"valine","slug":"valine","permalink":"https://laijiahao.cn/tags/valine/"},{"name":"picee","slug":"picee","permalink":"https://laijiahao.cn/tags/picee/"},{"name":"图床","slug":"图床","permalink":"https://laijiahao.cn/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"markdown","slug":"markdown","permalink":"https://laijiahao.cn/tags/markdown/"},{"name":"kde","slug":"kde","permalink":"https://laijiahao.cn/tags/kde/"},{"name":"archlinux","slug":"archlinux","permalink":"https://laijiahao.cn/tags/archlinux/"},{"name":"linux","slug":"linux","permalink":"https://laijiahao.cn/tags/linux/"},{"name":"进制","slug":"进制","permalink":"https://laijiahao.cn/tags/%E8%BF%9B%E5%88%B6/"},{"name":"manjaro","slug":"manjaro","permalink":"https://laijiahao.cn/tags/manjaro/"},{"name":"i3wm","slug":"i3wm","permalink":"https://laijiahao.cn/tags/i3wm/"},{"name":"vim","slug":"vim","permalink":"https://laijiahao.cn/tags/vim/"},{"name":"gitssh","slug":"gitssh","permalink":"https://laijiahao.cn/tags/gitssh/"},{"name":"WordPress","slug":"WordPress","permalink":"https://laijiahao.cn/tags/WordPress/"},{"name":"博客","slug":"博客","permalink":"https://laijiahao.cn/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"aria2","slug":"aria2","permalink":"https://laijiahao.cn/tags/aria2/"},{"name":"web","slug":"web","permalink":"https://laijiahao.cn/tags/web/"},{"name":"h5ai","slug":"h5ai","permalink":"https://laijiahao.cn/tags/h5ai/"}]}